/*
* generated by Xtext
*/
grammar InternalDm;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.larz.dom3.dm.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.larz.dom3.dm.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.larz.dom3.dm.services.DmGrammarAccess;

}

@parser::members {

 	private DmGrammarAccess grammarAccess;
 	
    public InternalDmParser(TokenStream input, IAstFactory factory, DmGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/larz/dom3/dm/parser/antlr/internal/InternalDm.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Dom3Mod";	
   	}
   	
   	@Override
   	protected DmGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDom3Mod
entryRuleDom3Mod returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDom3ModRule(), currentNode); }
	 iv_ruleDom3Mod=ruleDom3Mod 
	 { $current=$iv_ruleDom3Mod.current; } 
	 EOF 
;

// Rule Dom3Mod
ruleDom3Mod returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 0);
	 				}
					(	'#modname' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getModnameKeyword_0_0_0(), null); 
    }
(
(
		lv_modname_2_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getModnameSTRINGTerminalRuleCall_0_0_1_0(), "modname"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"modname",
	        		lv_modname_2_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 1);
	 				}
					(	'#description' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getDescriptionKeyword_0_1_0(), null); 
    }
(
(
		lv_desc_4_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getDescSTRINGTerminalRuleCall_0_1_1_0(), "desc"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"desc",
	        		lv_desc_4_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 2);
	 				}
					(	'#icon' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getIconKeyword_0_2_0(), null); 
    }
(
(
		lv_icon_6_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getIconSTRINGTerminalRuleCall_0_2_1_0(), "icon"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"icon",
	        		lv_icon_6_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 3);
	 				}
					(	'#version' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getVersionKeyword_0_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDom3ModAccess().getVersionDecimalValueParserRuleCall_0_3_1_0(), currentNode); 
	    }
		lv_version_8_0=ruleDecimalValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"version",
	        		lv_version_8_0, 
	        		"DecimalValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 4);
	 				}
					(	'#domversion' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getDomversionKeyword_0_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDom3ModAccess().getDomversionDecimalValueParserRuleCall_0_4_1_0(), currentNode); 
	    }
		lv_domversion_10_0=ruleDecimalValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"domversion",
	        		lv_domversion_10_0, 
	        		"DecimalValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 5);
	 				}
					(	'#poppergold' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getPoppergoldKeyword_0_5_0(), null); 
    }
(
(
		lv_poppergold_12_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getPoppergoldINTTerminalRuleCall_0_5_1_0(), "poppergold"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"poppergold",
	        		lv_poppergold_12_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 6);
	 				}
					(	'#resourcemult' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getResourcemultKeyword_0_6_0(), null); 
    }
(
(
		lv_resourcemult_14_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getResourcemultINTTerminalRuleCall_0_6_1_0(), "resourcemult"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"resourcemult",
	        		lv_resourcemult_14_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 7);
	 				}
					(	'#supplymult' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getSupplymultKeyword_0_7_0(), null); 
    }
(
(
		lv_supplymult_16_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getSupplymultINTTerminalRuleCall_0_7_1_0(), "supplymult"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"supplymult",
	        		lv_supplymult_16_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 8);
	 				}
					(	'#unresthalfinc' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getUnresthalfincKeyword_0_8_0(), null); 
    }
(
(
		lv_unresthalfinc_18_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getUnresthalfincINTTerminalRuleCall_0_8_1_0(), "unresthalfinc"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"unresthalfinc",
	        		lv_unresthalfinc_18_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 9);
	 				}
					(	'#unresthalfres' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getUnresthalfresKeyword_0_9_0(), null); 
    }
(
(
		lv_unresthalfres_20_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getUnresthalfresINTTerminalRuleCall_0_9_1_0(), "unresthalfres"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"unresthalfres",
	        		lv_unresthalfres_20_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 10);
	 				}
					(	'#eventisrare' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getEventisrareKeyword_0_10_0(), null); 
    }
(
(
		lv_eventisrare_22_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getEventisrareINTTerminalRuleCall_0_10_1_0(), "eventisrare"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"eventisrare",
	        		lv_eventisrare_22_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 11)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 11);
	 				}
					(	'#turmoilincome' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getTurmoilincomeKeyword_0_11_0(), null); 
    }
(
(
		lv_turmoilincome_24_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getTurmoilincomeINTTerminalRuleCall_0_11_1_0(), "turmoilincome"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"turmoilincome",
	        		lv_turmoilincome_24_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 12)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 12);
	 				}
					(	'#turmoilevents' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getTurmoileventsKeyword_0_12_0(), null); 
    }
(
(
		lv_turmoilevents_26_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getTurmoileventsINTTerminalRuleCall_0_12_1_0(), "turmoilevents"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"turmoilevents",
	        		lv_turmoilevents_26_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 13)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 13);
	 				}
					(	'#deathincome' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getDeathincomeKeyword_0_13_0(), null); 
    }
(
(
		lv_deathincome_28_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getDeathincomeINTTerminalRuleCall_0_13_1_0(), "deathincome"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"deathincome",
	        		lv_deathincome_28_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 14)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 14);
	 				}
					(	'#deathsupply' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getDeathsupplyKeyword_0_14_0(), null); 
    }
(
(
		lv_deathsupply_30_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getDeathsupplyINTTerminalRuleCall_0_14_1_0(), "deathsupply"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"deathsupply",
	        		lv_deathsupply_30_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 15)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 15);
	 				}
					(	'#deathdeath' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getDeathdeathKeyword_0_15_0(), null); 
    }
(
(
		lv_deathdeath_32_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getDeathdeathINTTerminalRuleCall_0_15_1_0(), "deathdeath"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"deathdeath",
	        		lv_deathdeath_32_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 16)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 16);
	 				}
					(	'#slothincome' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getSlothincomeKeyword_0_16_0(), null); 
    }
(
(
		lv_slothincome_34_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getSlothincomeINTTerminalRuleCall_0_16_1_0(), "slothincome"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"slothincome",
	        		lv_slothincome_34_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 17)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 17);
	 				}
					(	'#slothresources' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getSlothresourcesKeyword_0_17_0(), null); 
    }
(
(
		lv_slothresources_36_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getSlothresourcesINTTerminalRuleCall_0_17_1_0(), "slothresources"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"slothresources",
	        		lv_slothresources_36_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 18)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 18);
	 				}
					(	'#coldincome' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getColdincomeKeyword_0_18_0(), null); 
    }
(
(
		lv_coldincome_38_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getColdincomeINTTerminalRuleCall_0_18_1_0(), "coldincome"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"coldincome",
	        		lv_coldincome_38_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 19)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 19);
	 				}
					(	'#coldsupply' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getColdsupplyKeyword_0_19_0(), null); 
    }
(
(
		lv_coldsupply_40_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getColdsupplyINTTerminalRuleCall_0_19_1_0(), "coldsupply"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"coldsupply",
	        		lv_coldsupply_40_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 20)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 20);
	 				}
					(	'#misfortune' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getMisfortuneKeyword_0_20_0(), null); 
    }
(
(
		lv_misfortune_42_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getMisfortuneINTTerminalRuleCall_0_20_1_0(), "misfortune"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"misfortune",
	        		lv_misfortune_42_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 21)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 21);
	 				}
					(	'#luckevents' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getLuckeventsKeyword_0_21_0(), null); 
    }
(
(
		lv_luckevents_44_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getLuckeventsINTTerminalRuleCall_0_21_1_0(), "luckevents"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"luckevents",
	        		lv_luckevents_44_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 22)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 22);
	 				}
					(	'#researchscale' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getResearchscaleKeyword_0_22_0(), null); 
    }
(
(
		lv_researchscale_46_0=RULE_INT
		{
			createLeafNode(grammarAccess.getDom3ModAccess().getResearchscaleINTTerminalRuleCall_0_22_1_0(), "researchscale"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"researchscale",
	        		lv_researchscale_46_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 23)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDom3ModAccess().getUnorderedGroup_0(), 23);
	 				}
					(	'#end' 
    {
        createLeafNode(grammarAccess.getDom3ModAccess().getEndKeyword_0_23(), null); 
    }
)
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getDom3ModAccess().getUnorderedGroup_0())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDom3ModAccess().getUnorderedGroup_0());
	}

)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDom3ModAccess().getElementsAbstractElementParserRuleCall_1_0(), currentNode); 
	    }
		lv_elements_48_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDom3ModRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elements",
	        		lv_elements_48_0, 
	        		"AbstractElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAbstractElementRule(), currentNode); }
	 iv_ruleAbstractElement=ruleAbstractElement 
	 { $current=$iv_ruleAbstractElement.current; } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getArmorParserRuleCall_0(), currentNode); 
    }
    this_Armor_0=ruleArmor
    { 
        $current = $this_Armor_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getWeaponParserRuleCall_1(), currentNode); 
    }
    this_Weapon_1=ruleWeapon
    { 
        $current = $this_Weapon_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getMonsterParserRuleCall_2(), currentNode); 
    }
    this_Monster_2=ruleMonster
    { 
        $current = $this_Monster_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getSpellParserRuleCall_3(), currentNode); 
    }
    this_Spell_3=ruleSpell
    { 
        $current = $this_Spell_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getItemParserRuleCall_4(), currentNode); 
    }
    this_Item_4=ruleItem
    { 
        $current = $this_Item_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getNameParserRuleCall_5(), currentNode); 
    }
    this_Name_5=ruleName
    { 
        $current = $this_Name_5.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getSiteParserRuleCall_6(), currentNode); 
    }
    this_Site_6=ruleSite
    { 
        $current = $this_Site_6.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractElementAccess().getNationParserRuleCall_7(), currentNode); 
    }
    this_Nation_7=ruleNation
    { 
        $current = $this_Nation_7.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleArmor
entryRuleArmor returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArmorRule(), currentNode); }
	 iv_ruleArmor=ruleArmor 
	 { $current=$iv_ruleArmor.current; } 
	 EOF 
;

// Rule Armor
ruleArmor returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getArmorAccess().getSelectArmorByIdParserRuleCall_0(), currentNode); 
    }
    this_SelectArmorById_0=ruleSelectArmorById
    { 
        $current = $this_SelectArmorById_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getArmorAccess().getSelectArmorByNameParserRuleCall_1(), currentNode); 
    }
    this_SelectArmorByName_1=ruleSelectArmorByName
    { 
        $current = $this_SelectArmorByName_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getArmorAccess().getNewArmorParserRuleCall_2(), currentNode); 
    }
    this_NewArmor_2=ruleNewArmor
    { 
        $current = $this_NewArmor_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSelectArmorById
entryRuleSelectArmorById returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectArmorByIdRule(), currentNode); }
	 iv_ruleSelectArmorById=ruleSelectArmorById 
	 { $current=$iv_ruleSelectArmorById.current; } 
	 EOF 
;

// Rule SelectArmorById
ruleSelectArmorById returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectarmor' 
    {
        createLeafNode(grammarAccess.getSelectArmorByIdAccess().getSelectarmorKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectArmorByIdAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectArmorByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectArmorByIdAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectArmorByIdAccess().getModsArmorModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleArmorMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectArmorByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"ArmorMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectArmorByIdAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSelectArmorByName
entryRuleSelectArmorByName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectArmorByNameRule(), currentNode); }
	 iv_ruleSelectArmorByName=ruleSelectArmorByName 
	 { $current=$iv_ruleSelectArmorByName.current; } 
	 EOF 
;

// Rule SelectArmorByName
ruleSelectArmorByName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectarmor' 
    {
        createLeafNode(grammarAccess.getSelectArmorByNameAccess().getSelectarmorKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSelectArmorByNameAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectArmorByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectArmorByNameAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectArmorByNameAccess().getModsArmorModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleArmorMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectArmorByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"ArmorMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectArmorByNameAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleNewArmor
entryRuleNewArmor returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNewArmorRule(), currentNode); }
	 iv_ruleNewArmor=ruleNewArmor 
	 { $current=$iv_ruleNewArmor.current; } 
	 EOF 
;

// Rule NewArmor
ruleNewArmor returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#newarmor' 
    {
        createLeafNode(grammarAccess.getNewArmorAccess().getNewarmorKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getNewArmorAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewArmorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNewArmorAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNewArmorAccess().getModsArmorModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleArmorMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewArmorRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"ArmorMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getNewArmorAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleArmorMods
entryRuleArmorMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArmorModsRule(), currentNode); }
	 iv_ruleArmorMods=ruleArmorMods 
	 { $current=$iv_ruleArmorMods.current; } 
	 EOF 
;

// Rule ArmorMods
ruleArmorMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getArmorModsAccess().getArmorPattern1ParserRuleCall_0(), currentNode); 
    }
    this_ArmorPattern1_0=ruleArmorPattern1
    { 
        $current = $this_ArmorPattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getArmorModsAccess().getArmorPattern2ParserRuleCall_1(), currentNode); 
    }
    this_ArmorPattern2_1=ruleArmorPattern2
    { 
        $current = $this_ArmorPattern2_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleArmorPattern1
entryRuleArmorPattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArmorPattern1Rule(), currentNode); }
	 iv_ruleArmorPattern1=ruleArmorPattern1 
	 { $current=$iv_ruleArmorPattern1.current; } 
	 EOF 
;

// Rule ArmorPattern1
ruleArmorPattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getArmorPattern1Access().getArmorInst1ParserRuleCall_0(), currentNode); 
    }
    this_ArmorInst1_0=ruleArmorInst1
    { 
        $current = $this_ArmorInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getArmorPattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorPattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getArmorPattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleArmorPattern2
entryRuleArmorPattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArmorPattern2Rule(), currentNode); }
	 iv_ruleArmorPattern2=ruleArmorPattern2 
	 { $current=$iv_ruleArmorPattern2.current; } 
	 EOF 
;

// Rule ArmorPattern2
ruleArmorPattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getArmorPattern2Access().getArmorInst2ParserRuleCall_0(), currentNode); 
    }
    this_ArmorInst2_0=ruleArmorInst2
    { 
        $current = $this_ArmorInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getArmorPattern2Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorPattern2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getArmorPattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleArmorInst1
entryRuleArmorInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArmorInst1Rule(), currentNode); }
	 iv_ruleArmorInst1=ruleArmorInst1 
	 { $current=$iv_ruleArmorInst1.current; } 
	 EOF 
;

// Rule ArmorInst1
ruleArmorInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_name_0_0=	'#name' 
    {
        createLeafNode(grammarAccess.getArmorInst1Access().getNameNameKeyword_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#name", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleArmorInst2
entryRuleArmorInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArmorInst2Rule(), currentNode); }
	 iv_ruleArmorInst2=ruleArmorInst2 
	 { $current=$iv_ruleArmorInst2.current; } 
	 EOF 
;

// Rule ArmorInst2
ruleArmorInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_type_0_0=	'#type' 
    {
        createLeafNode(grammarAccess.getArmorInst2Access().getTypeTypeKeyword_0_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", true, "#type", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_prot_1_0=	'#prot' 
    {
        createLeafNode(grammarAccess.getArmorInst2Access().getProtProtKeyword_1_0(), "prot"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "prot", true, "#prot", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_def_2_0=	'#def' 
    {
        createLeafNode(grammarAccess.getArmorInst2Access().getDefDefKeyword_2_0(), "def"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "def", true, "#def", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_enc_3_0=	'#enc' 
    {
        createLeafNode(grammarAccess.getArmorInst2Access().getEncEncKeyword_3_0(), "enc"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "enc", true, "#enc", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_rcost_4_0=	'#rcost' 
    {
        createLeafNode(grammarAccess.getArmorInst2Access().getRcostRcostKeyword_4_0(), "rcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArmorInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "rcost", true, "#rcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleWeapon
entryRuleWeapon returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponRule(), currentNode); }
	 iv_ruleWeapon=ruleWeapon 
	 { $current=$iv_ruleWeapon.current; } 
	 EOF 
;

// Rule Weapon
ruleWeapon returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponAccess().getSelectWeaponByIdParserRuleCall_0(), currentNode); 
    }
    this_SelectWeaponById_0=ruleSelectWeaponById
    { 
        $current = $this_SelectWeaponById_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponAccess().getSelectWeaponByNameParserRuleCall_1(), currentNode); 
    }
    this_SelectWeaponByName_1=ruleSelectWeaponByName
    { 
        $current = $this_SelectWeaponByName_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponAccess().getNewWeaponParserRuleCall_2(), currentNode); 
    }
    this_NewWeapon_2=ruleNewWeapon
    { 
        $current = $this_NewWeapon_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSelectWeaponById
entryRuleSelectWeaponById returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectWeaponByIdRule(), currentNode); }
	 iv_ruleSelectWeaponById=ruleSelectWeaponById 
	 { $current=$iv_ruleSelectWeaponById.current; } 
	 EOF 
;

// Rule SelectWeaponById
ruleSelectWeaponById returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectweapon' 
    {
        createLeafNode(grammarAccess.getSelectWeaponByIdAccess().getSelectweaponKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectWeaponByIdAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectWeaponByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectWeaponByIdAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectWeaponByIdAccess().getModsWeaponModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleWeaponMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectWeaponByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"WeaponMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectWeaponByIdAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSelectWeaponByName
entryRuleSelectWeaponByName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectWeaponByNameRule(), currentNode); }
	 iv_ruleSelectWeaponByName=ruleSelectWeaponByName 
	 { $current=$iv_ruleSelectWeaponByName.current; } 
	 EOF 
;

// Rule SelectWeaponByName
ruleSelectWeaponByName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectweapon' 
    {
        createLeafNode(grammarAccess.getSelectWeaponByNameAccess().getSelectweaponKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSelectWeaponByNameAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectWeaponByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectWeaponByNameAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectWeaponByNameAccess().getModsWeaponModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleWeaponMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectWeaponByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"WeaponMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectWeaponByNameAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleNewWeapon
entryRuleNewWeapon returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNewWeaponRule(), currentNode); }
	 iv_ruleNewWeapon=ruleNewWeapon 
	 { $current=$iv_ruleNewWeapon.current; } 
	 EOF 
;

// Rule NewWeapon
ruleNewWeapon returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#newweapon' 
    {
        createLeafNode(grammarAccess.getNewWeaponAccess().getNewweaponKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getNewWeaponAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewWeaponRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNewWeaponAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNewWeaponAccess().getModsWeaponModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleWeaponMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewWeaponRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"WeaponMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getNewWeaponAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleWeaponMods
entryRuleWeaponMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponModsRule(), currentNode); }
	 iv_ruleWeaponMods=ruleWeaponMods 
	 { $current=$iv_ruleWeaponMods.current; } 
	 EOF 
;

// Rule WeaponMods
ruleWeaponMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponModsAccess().getWeaponPattern1ParserRuleCall_0(), currentNode); 
    }
    this_WeaponPattern1_0=ruleWeaponPattern1
    { 
        $current = $this_WeaponPattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponModsAccess().getWeaponPattern2ParserRuleCall_1(), currentNode); 
    }
    this_WeaponPattern2_1=ruleWeaponPattern2
    { 
        $current = $this_WeaponPattern2_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponModsAccess().getWeaponPattern3ParserRuleCall_2(), currentNode); 
    }
    this_WeaponPattern3_2=ruleWeaponPattern3
    { 
        $current = $this_WeaponPattern3_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponModsAccess().getWeaponPattern4ParserRuleCall_3(), currentNode); 
    }
    this_WeaponPattern4_3=ruleWeaponPattern4
    { 
        $current = $this_WeaponPattern4_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleWeaponPattern1
entryRuleWeaponPattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponPattern1Rule(), currentNode); }
	 iv_ruleWeaponPattern1=ruleWeaponPattern1 
	 { $current=$iv_ruleWeaponPattern1.current; } 
	 EOF 
;

// Rule WeaponPattern1
ruleWeaponPattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponPattern1Access().getWeaponInst1ParserRuleCall_0(), currentNode); 
    }
    this_WeaponInst1_0=ruleWeaponInst1
    { 
        $current = $this_WeaponInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getWeaponPattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponPattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getWeaponPattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleWeaponPattern2
entryRuleWeaponPattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponPattern2Rule(), currentNode); }
	 iv_ruleWeaponPattern2=ruleWeaponPattern2 
	 { $current=$iv_ruleWeaponPattern2.current; } 
	 EOF 
;

// Rule WeaponPattern2
ruleWeaponPattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponPattern2Access().getWeaponInst2ParserRuleCall_0(), currentNode); 
    }
    this_WeaponInst2_0=ruleWeaponInst2
    { 
        $current = $this_WeaponInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getWeaponPattern2Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponPattern2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getWeaponPattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleWeaponPattern3
entryRuleWeaponPattern3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponPattern3Rule(), currentNode); }
	 iv_ruleWeaponPattern3=ruleWeaponPattern3 
	 { $current=$iv_ruleWeaponPattern3.current; } 
	 EOF 
;

// Rule WeaponPattern3
ruleWeaponPattern3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponPattern3Access().getWeaponInst3ParserRuleCall_0(), currentNode); 
    }
    this_WeaponInst3_0=ruleWeaponInst3
    { 
        $current = $this_WeaponInst3_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value1_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getWeaponPattern3Access().getValue1INTTerminalRuleCall_1_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getWeaponPattern3Access().getValue2INTTerminalRuleCall_2_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getWeaponPattern3Access().getFREE_FORM_COMMENTTerminalRuleCall_3(), null); 
    }
)*)
;





// Entry rule entryRuleWeaponPattern4
entryRuleWeaponPattern4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponPattern4Rule(), currentNode); }
	 iv_ruleWeaponPattern4=ruleWeaponPattern4 
	 { $current=$iv_ruleWeaponPattern4.current; } 
	 EOF 
;

// Rule WeaponPattern4
ruleWeaponPattern4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getWeaponPattern4Access().getWeaponInst4ParserRuleCall_0(), currentNode); 
    }
    this_WeaponInst4_0=ruleWeaponInst4
    { 
        $current = $this_WeaponInst4_0.current; 
        currentNode = currentNode.getParent();
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getWeaponPattern4Access().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*)
;





// Entry rule entryRuleWeaponInst1
entryRuleWeaponInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponInst1Rule(), currentNode); }
	 iv_ruleWeaponInst1=ruleWeaponInst1 
	 { $current=$iv_ruleWeaponInst1.current; } 
	 EOF 
;

// Rule WeaponInst1
ruleWeaponInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_name_0_0=	'#name' 
    {
        createLeafNode(grammarAccess.getWeaponInst1Access().getNameNameKeyword_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#name", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleWeaponInst2
entryRuleWeaponInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponInst2Rule(), currentNode); }
	 iv_ruleWeaponInst2=ruleWeaponInst2 
	 { $current=$iv_ruleWeaponInst2.current; } 
	 EOF 
;

// Rule WeaponInst2
ruleWeaponInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_dmg_0_0=	'#dmg' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getDmgDmgKeyword_0_0(), "dmg"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dmg", true, "#dmg", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nratt_1_0=	'#nratt' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getNrattNrattKeyword_1_0(), "nratt"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nratt", true, "#nratt", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_att_2_0=	'#att' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getAttAttKeyword_2_0(), "att"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "att", true, "#att", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_def_3_0=	'#def' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getDefDefKeyword_3_0(), "def"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "def", true, "#def", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_len_4_0=	'#len' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getLenLenKeyword_4_0(), "len"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "len", true, "#len", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_range_5_0=	'#range' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getRangeRangeKeyword_5_0(), "range"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "range", true, "#range", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ammo_6_0=	'#ammo' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getAmmoAmmoKeyword_6_0(), "ammo"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ammo", true, "#ammo", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_rcost_7_0=	'#rcost' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getRcostRcostKeyword_7_0(), "rcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "rcost", true, "#rcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sound_8_0=	'#sound' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getSoundSoundKeyword_8_0(), "sound"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sound", true, "#sound", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_aoe_9_0=	'#aoe' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getAoeAoeKeyword_9_0(), "aoe"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "aoe", true, "#aoe", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_secondaryeffect_10_0=	'#secondaryeffect' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getSecondaryeffectSecondaryeffectKeyword_10_0(), "secondaryeffect"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "secondaryeffect", true, "#secondaryeffect", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_secondaryeffectalways_11_0=	'#secondaryeffectalways' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getSecondaryeffectalwaysSecondaryeffectalwaysKeyword_11_0(), "secondaryeffectalways"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "secondaryeffectalways", true, "#secondaryeffectalways", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_explspr_12_0=	'#explspr' 
    {
        createLeafNode(grammarAccess.getWeaponInst2Access().getExplsprExplsprKeyword_12_0(), "explspr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "explspr", true, "#explspr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleWeaponInst3
entryRuleWeaponInst3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponInst3Rule(), currentNode); }
	 iv_ruleWeaponInst3=ruleWeaponInst3 
	 { $current=$iv_ruleWeaponInst3.current; } 
	 EOF 
;

// Rule WeaponInst3
ruleWeaponInst3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_flyspr_0_0=	'#flyspr' 
    {
        createLeafNode(grammarAccess.getWeaponInst3Access().getFlysprFlysprKeyword_0(), "flyspr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "flyspr", true, "#flyspr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleWeaponInst4
entryRuleWeaponInst4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWeaponInst4Rule(), currentNode); }
	 iv_ruleWeaponInst4=ruleWeaponInst4 
	 { $current=$iv_ruleWeaponInst4.current; } 
	 EOF 
;

// Rule WeaponInst4
ruleWeaponInst4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_twohanded_0_0=	'#twohanded' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getTwohandedTwohandedKeyword_0_0(), "twohanded"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "twohanded", true, "#twohanded", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_armorpiercing_1_0=	'#armorpiercing' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getArmorpiercingArmorpiercingKeyword_1_0(), "armorpiercing"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "armorpiercing", true, "#armorpiercing", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_armornegating_2_0=	'#armornegating' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getArmornegatingArmornegatingKeyword_2_0(), "armornegating"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "armornegating", true, "#armornegating", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_magic_3_0=	'#magic' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getMagicMagicKeyword_3_0(), "magic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "magic", true, "#magic", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_normal_4_0=	'#dt_normal' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_normalDt_normalKeyword_4_0(), "dt_normal"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_normal", true, "#dt_normal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_stun_5_0=	'#dt_stun' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_stunDt_stunKeyword_5_0(), "dt_stun"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_stun", true, "#dt_stun", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_paralyze_6_0=	'#dt_paralyze' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_paralyzeDt_paralyzeKeyword_6_0(), "dt_paralyze"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_paralyze", true, "#dt_paralyze", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_poison_7_0=	'#dt_poison' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_poisonDt_poisonKeyword_7_0(), "dt_poison"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_poison", true, "#dt_poison", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_cap_8_0=	'#dt_cap' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_capDt_capKeyword_8_0(), "dt_cap"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_cap", true, "#dt_cap", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_demon_9_0=	'#dt_demon' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_demonDt_demonKeyword_9_0(), "dt_demon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_demon", true, "#dt_demon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_demononly_10_0=	'#dt_demononly' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_demononlyDt_demononlyKeyword_10_0(), "dt_demononly"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_demononly", true, "#dt_demononly", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_holy_11_0=	'#dt_holy' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_holyDt_holyKeyword_11_0(), "dt_holy"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_holy", true, "#dt_holy", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_magic_12_0=	'#dt_magic' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_magicDt_magicKeyword_12_0(), "dt_magic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_magic", true, "#dt_magic", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_small_13_0=	'#dt_small' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_smallDt_smallKeyword_13_0(), "dt_small"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_small", true, "#dt_small", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_large_14_0=	'#dt_large' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_largeDt_largeKeyword_14_0(), "dt_large"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_large", true, "#dt_large", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_constructonly_15_0=	'#dt_constructonly' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_constructonlyDt_constructonlyKeyword_15_0(), "dt_constructonly"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_constructonly", true, "#dt_constructonly", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dt_raise_16_0=	'#dt_raise' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getDt_raiseDt_raiseKeyword_16_0(), "dt_raise"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dt_raise", true, "#dt_raise", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mind_17_0=	'#mind' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getMindMindKeyword_17_0(), "mind"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mind", true, "#mind", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_cold_18_0=	'#cold' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getColdColdKeyword_18_0(), "cold"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "cold", true, "#cold", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_fire_19_0=	'#fire' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getFireFireKeyword_19_0(), "fire"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fire", true, "#fire", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_shock_20_0=	'#shock' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getShockShockKeyword_20_0(), "shock"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "shock", true, "#shock", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_poison_21_0=	'#poison' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getPoisonPoisonKeyword_21_0(), "poison"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "poison", true, "#poison", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_bonus_22_0=	'#bonus' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getBonusBonusKeyword_22_0(), "bonus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "bonus", true, "#bonus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_charge_23_0=	'#charge' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getChargeChargeKeyword_23_0(), "charge"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "charge", true, "#charge", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_flail_24_0=	'#flail' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getFlailFlailKeyword_24_0(), "flail"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "flail", true, "#flail", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nostr_25_0=	'#nostr' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getNostrNostrKeyword_25_0(), "nostr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nostr", true, "#nostr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nostr_26_0=	'#nostrength' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getNostrNostrengthKeyword_26_0(), "nostr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nostr", true, "#nostrength", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mrnegates_27_0=	'#mrnegates' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getMrnegatesMrnegatesKeyword_27_0(), "mrnegates"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mrnegates", true, "#mrnegates", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mrnegateseasily_28_0=	'#mrnegateseasily' 
    {
        createLeafNode(grammarAccess.getWeaponInst4Access().getMrnegateseasilyMrnegateseasilyKeyword_28_0(), "mrnegateseasily"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWeaponInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mrnegateseasily", true, "#mrnegateseasily", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMonster
entryRuleMonster returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterRule(), currentNode); }
	 iv_ruleMonster=ruleMonster 
	 { $current=$iv_ruleMonster.current; } 
	 EOF 
;

// Rule Monster
ruleMonster returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterAccess().getSelectMonsterByIdParserRuleCall_0(), currentNode); 
    }
    this_SelectMonsterById_0=ruleSelectMonsterById
    { 
        $current = $this_SelectMonsterById_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterAccess().getSelectMonsterByNameParserRuleCall_1(), currentNode); 
    }
    this_SelectMonsterByName_1=ruleSelectMonsterByName
    { 
        $current = $this_SelectMonsterByName_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterAccess().getNewMonsterParserRuleCall_2(), currentNode); 
    }
    this_NewMonster_2=ruleNewMonster
    { 
        $current = $this_NewMonster_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSelectMonsterById
entryRuleSelectMonsterById returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectMonsterByIdRule(), currentNode); }
	 iv_ruleSelectMonsterById=ruleSelectMonsterById 
	 { $current=$iv_ruleSelectMonsterById.current; } 
	 EOF 
;

// Rule SelectMonsterById
ruleSelectMonsterById returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectmonster' 
    {
        createLeafNode(grammarAccess.getSelectMonsterByIdAccess().getSelectmonsterKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectMonsterByIdAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectMonsterByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectMonsterByIdAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectMonsterByIdAccess().getModsMonsterModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleMonsterMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectMonsterByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"MonsterMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectMonsterByIdAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSelectMonsterByName
entryRuleSelectMonsterByName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectMonsterByNameRule(), currentNode); }
	 iv_ruleSelectMonsterByName=ruleSelectMonsterByName 
	 { $current=$iv_ruleSelectMonsterByName.current; } 
	 EOF 
;

// Rule SelectMonsterByName
ruleSelectMonsterByName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectmonster' 
    {
        createLeafNode(grammarAccess.getSelectMonsterByNameAccess().getSelectmonsterKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSelectMonsterByNameAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectMonsterByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectMonsterByNameAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectMonsterByNameAccess().getModsMonsterModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleMonsterMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectMonsterByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"MonsterMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectMonsterByNameAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleNewMonster
entryRuleNewMonster returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNewMonsterRule(), currentNode); }
	 iv_ruleNewMonster=ruleNewMonster 
	 { $current=$iv_ruleNewMonster.current; } 
	 EOF 
;

// Rule NewMonster
ruleNewMonster returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#newmonster' 
    {
        createLeafNode(grammarAccess.getNewMonsterAccess().getNewmonsterKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getNewMonsterAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewMonsterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNewMonsterAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNewMonsterAccess().getModsMonsterModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleMonsterMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewMonsterRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"MonsterMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getNewMonsterAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleMonsterMods
entryRuleMonsterMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterModsRule(), currentNode); }
	 iv_ruleMonsterMods=ruleMonsterMods 
	 { $current=$iv_ruleMonsterMods.current; } 
	 EOF 
;

// Rule MonsterMods
ruleMonsterMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterModsAccess().getMonsterPattern1ParserRuleCall_0(), currentNode); 
    }
    this_MonsterPattern1_0=ruleMonsterPattern1
    { 
        $current = $this_MonsterPattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterModsAccess().getMonsterPattern2ParserRuleCall_1(), currentNode); 
    }
    this_MonsterPattern2_1=ruleMonsterPattern2
    { 
        $current = $this_MonsterPattern2_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterModsAccess().getMonsterPattern3ParserRuleCall_2(), currentNode); 
    }
    this_MonsterPattern3_2=ruleMonsterPattern3
    { 
        $current = $this_MonsterPattern3_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterModsAccess().getMonsterPattern4ParserRuleCall_3(), currentNode); 
    }
    this_MonsterPattern4_3=ruleMonsterPattern4
    { 
        $current = $this_MonsterPattern4_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterModsAccess().getMonsterPattern5ParserRuleCall_4(), currentNode); 
    }
    this_MonsterPattern5_4=ruleMonsterPattern5
    { 
        $current = $this_MonsterPattern5_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterModsAccess().getMonsterPattern6ParserRuleCall_5(), currentNode); 
    }
    this_MonsterPattern6_5=ruleMonsterPattern6
    { 
        $current = $this_MonsterPattern6_5.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleMonsterPattern1
entryRuleMonsterPattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterPattern1Rule(), currentNode); }
	 iv_ruleMonsterPattern1=ruleMonsterPattern1 
	 { $current=$iv_ruleMonsterPattern1.current; } 
	 EOF 
;

// Rule MonsterPattern1
ruleMonsterPattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterPattern1Access().getMonsterInst1ParserRuleCall_0(), currentNode); 
    }
    this_MonsterInst1_0=ruleMonsterInst1
    { 
        $current = $this_MonsterInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getMonsterPattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterPattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getMonsterPattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleMonsterPattern2
entryRuleMonsterPattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterPattern2Rule(), currentNode); }
	 iv_ruleMonsterPattern2=ruleMonsterPattern2 
	 { $current=$iv_ruleMonsterPattern2.current; } 
	 EOF 
;

// Rule MonsterPattern2
ruleMonsterPattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterPattern2Access().getMonsterInst2ParserRuleCall_0(), currentNode); 
    }
    this_MonsterInst2_0=ruleMonsterInst2
    { 
        $current = $this_MonsterInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getMonsterPattern2Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterPattern2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getMonsterPattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleMonsterPattern3
entryRuleMonsterPattern3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterPattern3Rule(), currentNode); }
	 iv_ruleMonsterPattern3=ruleMonsterPattern3 
	 { $current=$iv_ruleMonsterPattern3.current; } 
	 EOF 
;

// Rule MonsterPattern3
ruleMonsterPattern3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterPattern3Access().getMonsterInst3ParserRuleCall_0(), currentNode); 
    }
    this_MonsterInst3_0=ruleMonsterInst3
    { 
        $current = $this_MonsterInst3_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value1_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getMonsterPattern3Access().getValue1INTTerminalRuleCall_1_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getMonsterPattern3Access().getValue2INTTerminalRuleCall_2_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getMonsterPattern3Access().getFREE_FORM_COMMENTTerminalRuleCall_3(), null); 
    }
)*)
;





// Entry rule entryRuleMonsterPattern4
entryRuleMonsterPattern4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterPattern4Rule(), currentNode); }
	 iv_ruleMonsterPattern4=ruleMonsterPattern4 
	 { $current=$iv_ruleMonsterPattern4.current; } 
	 EOF 
;

// Rule MonsterPattern4
ruleMonsterPattern4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterPattern4Access().getMonsterInst4ParserRuleCall_0(), currentNode); 
    }
    this_MonsterInst4_0=ruleMonsterInst4
    { 
        $current = $this_MonsterInst4_0.current; 
        currentNode = currentNode.getParent();
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getMonsterPattern4Access().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*)
;





// Entry rule entryRuleMonsterPattern5
entryRuleMonsterPattern5 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterPattern5Rule(), currentNode); }
	 iv_ruleMonsterPattern5=ruleMonsterPattern5 
	 { $current=$iv_ruleMonsterPattern5.current; } 
	 EOF 
;

// Rule MonsterPattern5
ruleMonsterPattern5 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterPattern5Access().getMonsterInst5ParserRuleCall_0(), currentNode); 
    }
    this_MonsterInst5_0=ruleMonsterInst5
    { 
        $current = $this_MonsterInst5_0.current; 
        currentNode = currentNode.getParent();
    }
((
(
		lv_value1_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getMonsterPattern5Access().getValue1STRINGTerminalRuleCall_1_0_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterPattern5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getMonsterPattern5Access().getValue2INTTerminalRuleCall_1_1_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterPattern5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getMonsterPattern5Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleMonsterPattern6
entryRuleMonsterPattern6 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterPattern6Rule(), currentNode); }
	 iv_ruleMonsterPattern6=ruleMonsterPattern6 
	 { $current=$iv_ruleMonsterPattern6.current; } 
	 EOF 
;

// Rule MonsterPattern6
ruleMonsterPattern6 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getMonsterPattern6Access().getMonsterInst6ParserRuleCall_0(), currentNode); 
    }
    this_MonsterInst6_0=ruleMonsterInst6
    { 
        $current = $this_MonsterInst6_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getMonsterPattern6Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterPattern6Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getMonsterPattern6Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleMonsterInst1
entryRuleMonsterInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterInst1Rule(), currentNode); }
	 iv_ruleMonsterInst1=ruleMonsterInst1 
	 { $current=$iv_ruleMonsterInst1.current; } 
	 EOF 
;

// Rule MonsterInst1
ruleMonsterInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_name_0_0=	'#name' 
    {
        createLeafNode(grammarAccess.getMonsterInst1Access().getNameNameKeyword_0_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#name", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_spr1_1_0=	'#spr1' 
    {
        createLeafNode(grammarAccess.getMonsterInst1Access().getSpr1Spr1Keyword_1_0(), "spr1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "spr1", true, "#spr1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_spr2_2_0=	'#spr2' 
    {
        createLeafNode(grammarAccess.getMonsterInst1Access().getSpr2Spr2Keyword_2_0(), "spr2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "spr2", true, "#spr2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_descr_3_0=	'#descr' 
    {
        createLeafNode(grammarAccess.getMonsterInst1Access().getDescrDescrKeyword_3_0(), "descr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "descr", true, "#descr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMonsterInst2
entryRuleMonsterInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterInst2Rule(), currentNode); }
	 iv_ruleMonsterInst2=ruleMonsterInst2 
	 { $current=$iv_ruleMonsterInst2.current; } 
	 EOF 
;

// Rule MonsterInst2
ruleMonsterInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_speciallook_0_0=	'#speciallook' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSpeciallookSpeciallookKeyword_0_0(), "speciallook"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "speciallook", true, "#speciallook", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ap_1_0=	'#ap' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getApApKeyword_1_0(), "ap"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ap", true, "#ap", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mapmove_2_0=	'#mapmove' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getMapmoveMapmoveKeyword_2_0(), "mapmove"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mapmove", true, "#mapmove", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_hp_3_0=	'#hp' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getHpHpKeyword_3_0(), "hp"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "hp", true, "#hp", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_prot_4_0=	'#prot' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getProtProtKeyword_4_0(), "prot"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "prot", true, "#prot", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_size_5_0=	'#size' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSizeSizeKeyword_5_0(), "size"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "size", true, "#size", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ressize_6_0=	'#ressize' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getRessizeRessizeKeyword_6_0(), "ressize"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ressize", true, "#ressize", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_str_7_0=	'#str' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getStrStrKeyword_7_0(), "str"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "str", true, "#str", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_enc_8_0=	'#enc' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getEncEncKeyword_8_0(), "enc"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "enc", true, "#enc", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_att_9_0=	'#att' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getAttAttKeyword_9_0(), "att"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "att", true, "#att", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_def_10_0=	'#def' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getDefDefKeyword_10_0(), "def"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "def", true, "#def", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_prec_11_0=	'#prec' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getPrecPrecKeyword_11_0(), "prec"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "prec", true, "#prec", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mr_12_0=	'#mr' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getMrMrKeyword_12_0(), "mr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mr", true, "#mr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mor_13_0=	'#mor' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getMorMorKeyword_13_0(), "mor"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mor", true, "#mor", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_gcost_14_0=	'#gcost' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getGcostGcostKeyword_14_0(), "gcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "gcost", true, "#gcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_rcost_15_0=	'#rcost' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getRcostRcostKeyword_15_0(), "rcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "rcost", true, "#rcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_pathcost_16_0=	'#pathcost' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getPathcostPathcostKeyword_16_0(), "pathcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pathcost", true, "#pathcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startdom_17_0=	'#startdom' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getStartdomStartdomKeyword_17_0(), "startdom"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startdom", true, "#startdom", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_eyes_18_0=	'#eyes' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getEyesEyesKeyword_18_0(), "eyes"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "eyes", true, "#eyes", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_copystats_19_0=	'#copystats' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getCopystatsCopystatsKeyword_19_0(), "copystats"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "copystats", true, "#copystats", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_copyspr_20_0=	'#copyspr' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getCopysprCopysprKeyword_20_0(), "copyspr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "copyspr", true, "#copyspr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_restrictedgod_21_0=	'#restrictedgod' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getRestrictedgodRestrictedgodKeyword_21_0(), "restrictedgod"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "restrictedgod", true, "#restrictedgod", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_shatteredsoul_22_0=	'#shatteredsoul' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getShatteredsoulShatteredsoulKeyword_22_0(), "shatteredsoul"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "shatteredsoul", true, "#shatteredsoul", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_coldres_23_0=	'#coldres' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getColdresColdresKeyword_23_0(), "coldres"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "coldres", true, "#coldres", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_coldres_24_0=	'#coldresist' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getColdresColdresistKeyword_24_0(), "coldres"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "coldres", true, "#coldresist", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_fireres_25_0=	'#fireres' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getFireresFireresKeyword_25_0(), "fireres"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fireres", true, "#fireres", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_fireres_26_0=	'#fireresist' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getFireresFireresistKeyword_26_0(), "fireres"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fireres", true, "#fireresist", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_poisonres_27_0=	'#poisonres' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getPoisonresPoisonresKeyword_27_0(), "poisonres"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "poisonres", true, "#poisonres", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_shockres_28_0=	'#shockres' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getShockresShockresKeyword_28_0(), "shockres"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "shockres", true, "#shockres", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_darkvision_29_0=	'#darkvision' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getDarkvisionDarkvisionKeyword_29_0(), "darkvision"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "darkvision", true, "#darkvision", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_seduce_30_0=	'#seduce' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSeduceSeduceKeyword_30_0(), "seduce"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "seduce", true, "#seduce", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_succubus_31_0=	'#succubus' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSuccubusSuccubusKeyword_31_0(), "succubus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "succubus", true, "#succubus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_beckon_32_0=	'#beckon' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getBeckonBeckonKeyword_32_0(), "beckon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "beckon", true, "#beckon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startage_33_0=	'#startage' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getStartageStartageKeyword_33_0(), "startage"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startage", true, "#startage", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_maxage_34_0=	'#maxage' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getMaxageMaxageKeyword_34_0(), "maxage"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "maxage", true, "#maxage", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_older_35_0=	'#older' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getOlderOlderKeyword_35_0(), "older"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "older", true, "#older", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_healer_36_0=	'#healer' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getHealerHealerKeyword_36_0(), "healer"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "healer", true, "#healer", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startaff_37_0=	'#startaff' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getStartaffStartaffKeyword_37_0(), "startaff"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startaff", true, "#startaff", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_supplybonus_38_0=	'#supplybonus' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSupplybonusSupplybonusKeyword_38_0(), "supplybonus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "supplybonus", true, "#supplybonus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwdamage_39_0=	'#uwdamage' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getUwdamageUwdamageKeyword_39_0(), "uwdamage"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwdamage", true, "#uwdamage", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_homesick_40_0=	'#homesick' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getHomesickHomesickKeyword_40_0(), "homesick"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "homesick", true, "#homesick", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_coldpower_41_0=	'#coldpower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getColdpowerColdpowerKeyword_41_0(), "coldpower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "coldpower", true, "#coldpower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_firepower_42_0=	'#firepower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getFirepowerFirepowerKeyword_42_0(), "firepower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "firepower", true, "#firepower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_stormpower_43_0=	'#stormpower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getStormpowerStormpowerKeyword_43_0(), "stormpower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "stormpower", true, "#stormpower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_darkpower_44_0=	'#darkpower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getDarkpowerDarkpowerKeyword_44_0(), "darkpower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "darkpower", true, "#darkpower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_springpower_45_0=	'#springpower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSpringpowerSpringpowerKeyword_45_0(), "springpower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "springpower", true, "#springpower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_summerpower_46_0=	'#summerpower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSummerpowerSummerpowerKeyword_46_0(), "summerpower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "summerpower", true, "#summerpower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_fallpower_47_0=	'#fallpower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getFallpowerFallpowerKeyword_47_0(), "fallpower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fallpower", true, "#fallpower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_winterpower_48_0=	'#winterpower' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getWinterpowerWinterpowerKeyword_48_0(), "winterpower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "winterpower", true, "#winterpower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ambidextrous_49_0=	'#ambidextrous' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getAmbidextrousAmbidextrousKeyword_49_0(), "ambidextrous"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ambidextrous", true, "#ambidextrous", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_banefireshield_50_0=	'#banefireshield' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getBanefireshieldBanefireshieldKeyword_50_0(), "banefireshield"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "banefireshield", true, "#banefireshield", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_berserk_51_0=	'#berserk' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getBerserkBerserkKeyword_51_0(), "berserk"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "berserk", true, "#berserk", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_standard_52_0=	'#standard' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getStandardStandardKeyword_52_0(), "standard"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "standard", true, "#standard", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_animalawe_53_0=	'#animalawe' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getAnimalaweAnimalaweKeyword_53_0(), "animalawe"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "animalawe", true, "#animalawe", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_awe_54_0=	'#awe' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getAweAweKeyword_54_0(), "awe"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "awe", true, "#awe", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_fear_55_0=	'#fear' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getFearFearKeyword_55_0(), "fear"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fear", true, "#fear", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_regeneration_56_0=	'#regeneration' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getRegenerationRegenerationKeyword_56_0(), "regeneration"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "regeneration", true, "#regeneration", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_reinvigoration_57_0=	'#reinvigoration' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getReinvigorationReinvigorationKeyword_57_0(), "reinvigoration"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "reinvigoration", true, "#reinvigoration", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_fireshield_58_0=	'#fireshield' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getFireshieldFireshieldKeyword_58_0(), "fireshield"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fireshield", true, "#fireshield", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_iceprot_59_0=	'#iceprot' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getIceprotIceprotKeyword_59_0(), "iceprot"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "iceprot", true, "#iceprot", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_poisoncloud_60_0=	'#poisoncloud' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getPoisoncloudPoisoncloudKeyword_60_0(), "poisoncloud"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "poisoncloud", true, "#poisoncloud", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_diseasecloud_61_0=	'#diseasecloud' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getDiseasecloudDiseasecloudKeyword_61_0(), "diseasecloud"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "diseasecloud", true, "#diseasecloud", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_bloodvengeance_62_0=	'#bloodvengeance' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getBloodvengeanceBloodvengeanceKeyword_62_0(), "bloodvengeance"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "bloodvengeance", true, "#bloodvengeance", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_castledef_63_0=	'#castledef' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getCastledefCastledefKeyword_63_0(), "castledef"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "castledef", true, "#castledef", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_siegebonus_64_0=	'#siegebonus' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSiegebonusSiegebonusKeyword_64_0(), "siegebonus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "siegebonus", true, "#siegebonus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_patrolbonus_65_0=	'#patrolbonus' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getPatrolbonusPatrolbonusKeyword_65_0(), "patrolbonus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "patrolbonus", true, "#patrolbonus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_pillagebonus_66_0=	'#pillagebonus' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getPillagebonusPillagebonusKeyword_66_0(), "pillagebonus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pillagebonus", true, "#pillagebonus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_researchbonus_67_0=	'#researchbonus' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getResearchbonusResearchbonusKeyword_67_0(), "researchbonus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "researchbonus", true, "#researchbonus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_forgebonus_68_0=	'#forgebonus' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getForgebonusForgebonusKeyword_68_0(), "forgebonus"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "forgebonus", true, "#forgebonus", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_douse_69_0=	'#douse' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getDouseDouseKeyword_69_0(), "douse"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "douse", true, "#douse", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nobadevents_70_0=	'#nobadevents' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getNobadeventsNobadeventsKeyword_70_0(), "nobadevents"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nobadevents", true, "#nobadevents", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_incunrest_71_0=	'#incunrest' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getIncunrestIncunrestKeyword_71_0(), "incunrest"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "incunrest", true, "#incunrest", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_spreaddom_72_0=	'#spreaddom' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getSpreaddomSpreaddomKeyword_72_0(), "spreaddom"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "spreaddom", true, "#spreaddom", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_leper_73_0=	'#leper' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getLeperLeperKeyword_73_0(), "leper"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "leper", true, "#leper", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_popkill_74_0=	'#popkill' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getPopkillPopkillKeyword_74_0(), "popkill"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "popkill", true, "#popkill", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_heretic_75_0=	'#heretic' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getHereticHereticKeyword_75_0(), "heretic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "heretic", true, "#heretic", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_itemslots_76_0=	'#itemslots' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getItemslotsItemslotsKeyword_76_0(), "itemslots"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "itemslots", true, "#itemslots", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nametype_77_0=	'#nametype' 
    {
        createLeafNode(grammarAccess.getMonsterInst2Access().getNametypeNametypeKeyword_77_0(), "nametype"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nametype", true, "#nametype", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMonsterInst3
entryRuleMonsterInst3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterInst3Rule(), currentNode); }
	 iv_ruleMonsterInst3=ruleMonsterInst3 
	 { $current=$iv_ruleMonsterInst3.current; } 
	 EOF 
;

// Rule MonsterInst3
ruleMonsterInst3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_magicskill_0_0=	'#magicskill' 
    {
        createLeafNode(grammarAccess.getMonsterInst3Access().getMagicskillMagicskillKeyword_0_0(), "magicskill"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "magicskill", true, "#magicskill", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_custommagic_1_0=	'#custommagic' 
    {
        createLeafNode(grammarAccess.getMonsterInst3Access().getCustommagicCustommagicKeyword_1_0(), "custommagic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "custommagic", true, "#custommagic", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_magicboost_2_0=	'#magicboost' 
    {
        createLeafNode(grammarAccess.getMonsterInst3Access().getMagicboostMagicboostKeyword_2_0(), "magicboost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "magicboost", true, "#magicboost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_gemprod_3_0=	'#gemprod' 
    {
        createLeafNode(grammarAccess.getMonsterInst3Access().getGemprodGemprodKeyword_3_0(), "gemprod"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "gemprod", true, "#gemprod", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMonsterInst4
entryRuleMonsterInst4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterInst4Rule(), currentNode); }
	 iv_ruleMonsterInst4=ruleMonsterInst4 
	 { $current=$iv_ruleMonsterInst4.current; } 
	 EOF 
;

// Rule MonsterInst4
ruleMonsterInst4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_clear_0_0=	'#clear' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getClearClearKeyword_0_0(), "clear"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clear", true, "#clear", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_clearweapons_1_0=	'#clearweapons' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getClearweaponsClearweaponsKeyword_1_0(), "clearweapons"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clearweapons", true, "#clearweapons", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_cleararmor_2_0=	'#cleararmor' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getCleararmorCleararmorKeyword_2_0(), "cleararmor"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "cleararmor", true, "#cleararmor", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_clearmagic_3_0=	'#clearmagic' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getClearmagicClearmagicKeyword_3_0(), "clearmagic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clearmagic", true, "#clearmagic", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_clearspec_4_0=	'#clearspec' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getClearspecClearspecKeyword_4_0(), "clearspec"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clearspec", true, "#clearspec", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_female_5_0=	'#female' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getFemaleFemaleKeyword_5_0(), "female"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "female", true, "#female", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mounted_6_0=	'#mounted' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getMountedMountedKeyword_6_0(), "mounted"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mounted", true, "#mounted", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_holy_7_0=	'#holy' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getHolyHolyKeyword_7_0(), "holy"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "holy", true, "#holy", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_animal_8_0=	'#animal' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getAnimalAnimalKeyword_8_0(), "animal"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "animal", true, "#animal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_undead_9_0=	'#undead' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getUndeadUndeadKeyword_9_0(), "undead"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "undead", true, "#undead", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_demon_10_0=	'#demon' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getDemonDemonKeyword_10_0(), "demon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "demon", true, "#demon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_magicbeing_11_0=	'#magicbeing' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getMagicbeingMagicbeingKeyword_11_0(), "magicbeing"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "magicbeing", true, "#magicbeing", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_stonebeing_12_0=	'#stonebeing' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getStonebeingStonebeingKeyword_12_0(), "stonebeing"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "stonebeing", true, "#stonebeing", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_inanimate_13_0=	'#inanimate' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getInanimateInanimateKeyword_13_0(), "inanimate"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inanimate", true, "#inanimate", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_coldblood_14_0=	'#coldblood' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getColdbloodColdbloodKeyword_14_0(), "coldblood"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "coldblood", true, "#coldblood", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_coldblood_15_0=	'#coldblooded' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getColdbloodColdbloodedKeyword_15_0(), "coldblood"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "coldblood", true, "#coldblooded", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_immortal_16_0=	'#immortal' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getImmortalImmortalKeyword_16_0(), "immortal"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "immortal", true, "#immortal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_blind_17_0=	'#blind' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getBlindBlindKeyword_17_0(), "blind"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "blind", true, "#blind", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_unique_18_0=	'#unique' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getUniqueUniqueKeyword_18_0(), "unique"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "unique", true, "#unique", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_immobile_19_0=	'#immobile' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getImmobileImmobileKeyword_19_0(), "immobile"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "immobile", true, "#immobile", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_aquatic_20_0=	'#aquatic' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getAquaticAquaticKeyword_20_0(), "aquatic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "aquatic", true, "#aquatic", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_amphibian_21_0=	'#amphibian' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getAmphibianAmphibianKeyword_21_0(), "amphibian"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "amphibian", true, "#amphibian", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_pooramphibian_22_0=	'#pooramphibian' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getPooramphibianPooramphibianKeyword_22_0(), "pooramphibian"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pooramphibian", true, "#pooramphibian", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_flying_23_0=	'#flying' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getFlyingFlyingKeyword_23_0(), "flying"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "flying", true, "#flying", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_stormimmune_24_0=	'#stormimmune' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getStormimmuneStormimmuneKeyword_24_0(), "stormimmune"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "stormimmune", true, "#stormimmune", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sailing_25_0=	'#sailing' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getSailingSailingKeyword_25_0(), "sailing"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sailing", true, "#sailing", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_forestsurvival_26_0=	'#forestsurvival' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getForestsurvivalForestsurvivalKeyword_26_0(), "forestsurvival"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "forestsurvival", true, "#forestsurvival", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mountainsurvival_27_0=	'#mountainsurvival' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getMountainsurvivalMountainsurvivalKeyword_27_0(), "mountainsurvival"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mountainsurvival", true, "#mountainsurvival", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_swampsurvival_28_0=	'#swampsurvival' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getSwampsurvivalSwampsurvivalKeyword_28_0(), "swampsurvival"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "swampsurvival", true, "#swampsurvival", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_wastesurvival_29_0=	'#wastesurvival' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getWastesurvivalWastesurvivalKeyword_29_0(), "wastesurvival"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "wastesurvival", true, "#wastesurvival", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_illusion_30_0=	'#illusion' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getIllusionIllusionKeyword_30_0(), "illusion"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "illusion", true, "#illusion", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_spy_31_0=	'#spy' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getSpySpyKeyword_31_0(), "spy"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "spy", true, "#spy", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_assassin_32_0=	'#assassin' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getAssassinAssassinKeyword_32_0(), "assassin"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "assassin", true, "#assassin", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_heal_33_0=	'#heal' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getHealHealKeyword_33_0(), "heal"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "heal", true, "#heal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_noheal_34_0=	'#noheal' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getNohealNohealKeyword_34_0(), "noheal"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "noheal", true, "#noheal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_neednoteat_35_0=	'#neednoteat' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getNeednoteatNeednoteatKeyword_35_0(), "neednoteat"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "neednoteat", true, "#neednoteat", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_ethereal_36_0=	'#ethereal' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getEtherealEtherealKeyword_36_0(), "ethereal"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "ethereal", true, "#ethereal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_trample_37_0=	'#trample' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getTrampleTrampleKeyword_37_0(), "trample"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "trample", true, "#trample", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_entangle_38_0=	'#entangle' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getEntangleEntangleKeyword_38_0(), "entangle"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "entangle", true, "#entangle", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_eyeloss_39_0=	'#eyeloss' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getEyelossEyelossKeyword_39_0(), "eyeloss"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "eyeloss", true, "#eyeloss", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_horrormark_40_0=	'#horrormark' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getHorrormarkHorrormarkKeyword_40_0(), "horrormark"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "horrormark", true, "#horrormark", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_poisonarmor_41_0=	'#poisonarmor' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getPoisonarmorPoisonarmorKeyword_41_0(), "poisonarmor"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "poisonarmor", true, "#poisonarmor", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_inquisitor_42_0=	'#inquisitor' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getInquisitorInquisitorKeyword_42_0(), "inquisitor"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "inquisitor", true, "#inquisitor", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_noitem_43_0=	'#noitem' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getNoitemNoitemKeyword_43_0(), "noitem"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "noitem", true, "#noitem", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_drainimmune_44_0=	'#drainimmune' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getDrainimmuneDrainimmuneKeyword_44_0(), "drainimmune"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "drainimmune", true, "#drainimmune", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_noleader_45_0=	'#noleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getNoleaderNoleaderKeyword_45_0(), "noleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "noleader", true, "#noleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_poorleader_46_0=	'#poorleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getPoorleaderPoorleaderKeyword_46_0(), "poorleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "poorleader", true, "#poorleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_okleader_47_0=	'#okleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getOkleaderOkleaderKeyword_47_0(), "okleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "okleader", true, "#okleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_goodleader_48_0=	'#goodleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getGoodleaderGoodleaderKeyword_48_0(), "goodleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "goodleader", true, "#goodleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_expertleader_49_0=	'#expertleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getExpertleaderExpertleaderKeyword_49_0(), "expertleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "expertleader", true, "#expertleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_superiorleader_50_0=	'#superiorleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getSuperiorleaderSuperiorleaderKeyword_50_0(), "superiorleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "superiorleader", true, "#superiorleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nomagicleader_51_0=	'#nomagicleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getNomagicleaderNomagicleaderKeyword_51_0(), "nomagicleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nomagicleader", true, "#nomagicleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_poormagicleader_52_0=	'#poormagicleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getPoormagicleaderPoormagicleaderKeyword_52_0(), "poormagicleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "poormagicleader", true, "#poormagicleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_okmagicleader_53_0=	'#okmagicleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getOkmagicleaderOkmagicleaderKeyword_53_0(), "okmagicleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "okmagicleader", true, "#okmagicleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_goodmagicleader_54_0=	'#goodmagicleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getGoodmagicleaderGoodmagicleaderKeyword_54_0(), "goodmagicleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "goodmagicleader", true, "#goodmagicleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_expertmagicleader_55_0=	'#expertmagicleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getExpertmagicleaderExpertmagicleaderKeyword_55_0(), "expertmagicleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "expertmagicleader", true, "#expertmagicleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_superiormagicleader_56_0=	'#superiormagicleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getSuperiormagicleaderSuperiormagicleaderKeyword_56_0(), "superiormagicleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "superiormagicleader", true, "#superiormagicleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_noundeadleader_57_0=	'#noundeadleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getNoundeadleaderNoundeadleaderKeyword_57_0(), "noundeadleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "noundeadleader", true, "#noundeadleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_poorundeadleader_58_0=	'#poorundeadleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getPoorundeadleaderPoorundeadleaderKeyword_58_0(), "poorundeadleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "poorundeadleader", true, "#poorundeadleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_okundeadleader_59_0=	'#okundeadleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getOkundeadleaderOkundeadleaderKeyword_59_0(), "okundeadleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "okundeadleader", true, "#okundeadleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_goodundeadleader_60_0=	'#goodundeadleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getGoodundeadleaderGoodundeadleaderKeyword_60_0(), "goodundeadleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "goodundeadleader", true, "#goodundeadleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_expertundeadleader_61_0=	'#expertundeadleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getExpertundeadleaderExpertundeadleaderKeyword_61_0(), "expertundeadleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "expertundeadleader", true, "#expertundeadleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_superiorundeadleader_62_0=	'#superiorundeadleader' 
    {
        createLeafNode(grammarAccess.getMonsterInst4Access().getSuperiorundeadleaderSuperiorundeadleaderKeyword_62_0(), "superiorundeadleader"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "superiorundeadleader", true, "#superiorundeadleader", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMonsterInst5
entryRuleMonsterInst5 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterInst5Rule(), currentNode); }
	 iv_ruleMonsterInst5=ruleMonsterInst5 
	 { $current=$iv_ruleMonsterInst5.current; } 
	 EOF 
;

// Rule MonsterInst5
ruleMonsterInst5 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_weapon_0_0=	'#weapon' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getWeaponWeaponKeyword_0_0(), "weapon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "weapon", true, "#weapon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_armor_1_0=	'#armor' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getArmorArmorKeyword_1_0(), "armor"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "armor", true, "#armor", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_onebattlespell_2_0=	'#onebattlespell' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getOnebattlespellOnebattlespellKeyword_2_0(), "onebattlespell"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "onebattlespell", true, "#onebattlespell", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_firstshape_3_0=	'#firstshape' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getFirstshapeFirstshapeKeyword_3_0(), "firstshape"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "firstshape", true, "#firstshape", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_secondshape_4_0=	'#secondshape' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getSecondshapeSecondshapeKeyword_4_0(), "secondshape"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "secondshape", true, "#secondshape", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_secondtmpshape_5_0=	'#secondtmpshape' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getSecondtmpshapeSecondtmpshapeKeyword_5_0(), "secondtmpshape"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "secondtmpshape", true, "#secondtmpshape", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_shapechange_6_0=	'#shapechange' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getShapechangeShapechangeKeyword_6_0(), "shapechange"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "shapechange", true, "#shapechange", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_landshape_7_0=	'#landshape' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getLandshapeLandshapeKeyword_7_0(), "landshape"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "landshape", true, "#landshape", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_watershape_8_0=	'#watershape' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getWatershapeWatershapeKeyword_8_0(), "watershape"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "watershape", true, "#watershape", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_forestshape_9_0=	'#forestshape' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getForestshapeForestshapeKeyword_9_0(), "forestshape"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "forestshape", true, "#forestshape", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_plainshape_10_0=	'#plainshape' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getPlainshapePlainshapeKeyword_10_0(), "plainshape"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "plainshape", true, "#plainshape", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_domsummon_11_0=	'#domsummon' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getDomsummonDomsummonKeyword_11_0(), "domsummon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "domsummon", true, "#domsummon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_domsummon2_12_0=	'#domsummon2' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getDomsummon2Domsummon2Keyword_12_0(), "domsummon2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "domsummon2", true, "#domsummon2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_domsummon20_13_0=	'#domsummon20' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getDomsummon20Domsummon20Keyword_13_0(), "domsummon20"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "domsummon20", true, "#domsummon20", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_makemonster1_14_0=	'#makemonster1' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getMakemonster1Makemonster1Keyword_14_0(), "makemonster1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "makemonster1", true, "#makemonster1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_makemonster2_15_0=	'#makemonster2' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getMakemonster2Makemonster2Keyword_15_0(), "makemonster2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "makemonster2", true, "#makemonster2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_makemonster3_16_0=	'#makemonster3' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getMakemonster3Makemonster3Keyword_16_0(), "makemonster3"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "makemonster3", true, "#makemonster3", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_makemonster4_17_0=	'#makemonster4' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getMakemonster4Makemonster4Keyword_17_0(), "makemonster4"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "makemonster4", true, "#makemonster4", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_makemonster5_18_0=	'#makemonster5' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getMakemonster5Makemonster5Keyword_18_0(), "makemonster5"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "makemonster5", true, "#makemonster5", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_summon1_19_0=	'#summon1' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getSummon1Summon1Keyword_19_0(), "summon1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "summon1", true, "#summon1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_summon5_20_0=	'#summon5' 
    {
        createLeafNode(grammarAccess.getMonsterInst5Access().getSummon5Summon5Keyword_20_0(), "summon5"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "summon5", true, "#summon5", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMonsterInst6
entryRuleMonsterInst6 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMonsterInst6Rule(), currentNode); }
	 iv_ruleMonsterInst6=ruleMonsterInst6 
	 { $current=$iv_ruleMonsterInst6.current; } 
	 EOF 
;

// Rule MonsterInst6
ruleMonsterInst6 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_stealthy_0_0=	'#stealthy' 
    {
        createLeafNode(grammarAccess.getMonsterInst6Access().getStealthyStealthyKeyword_0_0(), "stealthy"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst6Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "stealthy", true, "#stealthy", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_heat_1_0=	'#heat' 
    {
        createLeafNode(grammarAccess.getMonsterInst6Access().getHeatHeatKeyword_1_0(), "heat"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst6Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "heat", true, "#heat", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_cold_2_0=	'#cold' 
    {
        createLeafNode(grammarAccess.getMonsterInst6Access().getColdColdKeyword_2_0(), "cold"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonsterInst6Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "cold", true, "#cold", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleSpell
entryRuleSpell returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellRule(), currentNode); }
	 iv_ruleSpell=ruleSpell 
	 { $current=$iv_ruleSpell.current; } 
	 EOF 
;

// Rule Spell
ruleSpell returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellAccess().getSelectSpellByIdParserRuleCall_0(), currentNode); 
    }
    this_SelectSpellById_0=ruleSelectSpellById
    { 
        $current = $this_SelectSpellById_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellAccess().getSelectSpellByNameParserRuleCall_1(), currentNode); 
    }
    this_SelectSpellByName_1=ruleSelectSpellByName
    { 
        $current = $this_SelectSpellByName_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellAccess().getNewSpellParserRuleCall_2(), currentNode); 
    }
    this_NewSpell_2=ruleNewSpell
    { 
        $current = $this_NewSpell_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSelectSpellById
entryRuleSelectSpellById returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectSpellByIdRule(), currentNode); }
	 iv_ruleSelectSpellById=ruleSelectSpellById 
	 { $current=$iv_ruleSelectSpellById.current; } 
	 EOF 
;

// Rule SelectSpellById
ruleSelectSpellById returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectspell' 
    {
        createLeafNode(grammarAccess.getSelectSpellByIdAccess().getSelectspellKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectSpellByIdAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSpellByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectSpellByIdAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectSpellByIdAccess().getModsSpellModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleSpellMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSpellByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"SpellMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectSpellByIdAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSelectSpellByName
entryRuleSelectSpellByName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectSpellByNameRule(), currentNode); }
	 iv_ruleSelectSpellByName=ruleSelectSpellByName 
	 { $current=$iv_ruleSelectSpellByName.current; } 
	 EOF 
;

// Rule SelectSpellByName
ruleSelectSpellByName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectspell' 
    {
        createLeafNode(grammarAccess.getSelectSpellByNameAccess().getSelectspellKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSelectSpellByNameAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSpellByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectSpellByNameAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectSpellByNameAccess().getModsSpellModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleSpellMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSpellByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"SpellMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectSpellByNameAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleNewSpell
entryRuleNewSpell returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNewSpellRule(), currentNode); }
	 iv_ruleNewSpell=ruleNewSpell 
	 { $current=$iv_ruleNewSpell.current; } 
	 EOF 
;

// Rule NewSpell
ruleNewSpell returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#newspell' 
    {
        createLeafNode(grammarAccess.getNewSpellAccess().getNewspellKeyword_0(), null); 
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNewSpellAccess().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNewSpellAccess().getModsSpellModsParserRuleCall_2_0(), currentNode); 
	    }
		lv_mods_2_0=ruleSpellMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewSpellRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_2_0, 
	        		"SpellMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getNewSpellAccess().getEndKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleSpellMods
entryRuleSpellMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellModsRule(), currentNode); }
	 iv_ruleSpellMods=ruleSpellMods 
	 { $current=$iv_ruleSpellMods.current; } 
	 EOF 
;

// Rule SpellMods
ruleSpellMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellModsAccess().getSpellPattern1ParserRuleCall_0(), currentNode); 
    }
    this_SpellPattern1_0=ruleSpellPattern1
    { 
        $current = $this_SpellPattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellModsAccess().getSpellPattern2ParserRuleCall_1(), currentNode); 
    }
    this_SpellPattern2_1=ruleSpellPattern2
    { 
        $current = $this_SpellPattern2_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellModsAccess().getSpellPattern3ParserRuleCall_2(), currentNode); 
    }
    this_SpellPattern3_2=ruleSpellPattern3
    { 
        $current = $this_SpellPattern3_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellModsAccess().getSpellPattern4ParserRuleCall_3(), currentNode); 
    }
    this_SpellPattern4_3=ruleSpellPattern4
    { 
        $current = $this_SpellPattern4_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellModsAccess().getSpellPattern5ParserRuleCall_4(), currentNode); 
    }
    this_SpellPattern5_4=ruleSpellPattern5
    { 
        $current = $this_SpellPattern5_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSpellPattern1
entryRuleSpellPattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellPattern1Rule(), currentNode); }
	 iv_ruleSpellPattern1=ruleSpellPattern1 
	 { $current=$iv_ruleSpellPattern1.current; } 
	 EOF 
;

// Rule SpellPattern1
ruleSpellPattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellPattern1Access().getSpellInst1ParserRuleCall_0(), currentNode); 
    }
    this_SpellInst1_0=ruleSpellInst1
    { 
        $current = $this_SpellInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSpellPattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellPattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSpellPattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleSpellPattern2
entryRuleSpellPattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellPattern2Rule(), currentNode); }
	 iv_ruleSpellPattern2=ruleSpellPattern2 
	 { $current=$iv_ruleSpellPattern2.current; } 
	 EOF 
;

// Rule SpellPattern2
ruleSpellPattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellPattern2Access().getSpellInst2ParserRuleCall_0(), currentNode); 
    }
    this_SpellInst2_0=ruleSpellInst2
    { 
        $current = $this_SpellInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSpellPattern2Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellPattern2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSpellPattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleSpellPattern3
entryRuleSpellPattern3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellPattern3Rule(), currentNode); }
	 iv_ruleSpellPattern3=ruleSpellPattern3 
	 { $current=$iv_ruleSpellPattern3.current; } 
	 EOF 
;

// Rule SpellPattern3
ruleSpellPattern3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellPattern3Access().getSpellInst3ParserRuleCall_0(), currentNode); 
    }
    this_SpellInst3_0=ruleSpellInst3
    { 
        $current = $this_SpellInst3_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value1_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSpellPattern3Access().getValue1INTTerminalRuleCall_1_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSpellPattern3Access().getValue2INTTerminalRuleCall_2_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSpellPattern3Access().getFREE_FORM_COMMENTTerminalRuleCall_3(), null); 
    }
)*)
;





// Entry rule entryRuleSpellPattern4
entryRuleSpellPattern4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellPattern4Rule(), currentNode); }
	 iv_ruleSpellPattern4=ruleSpellPattern4 
	 { $current=$iv_ruleSpellPattern4.current; } 
	 EOF 
;

// Rule SpellPattern4
ruleSpellPattern4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellPattern4Access().getSpellInst4ParserRuleCall_0(), currentNode); 
    }
    this_SpellInst4_0=ruleSpellInst4
    { 
        $current = $this_SpellInst4_0.current; 
        currentNode = currentNode.getParent();
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSpellPattern4Access().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*)
;





// Entry rule entryRuleSpellPattern5
entryRuleSpellPattern5 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellPattern5Rule(), currentNode); }
	 iv_ruleSpellPattern5=ruleSpellPattern5 
	 { $current=$iv_ruleSpellPattern5.current; } 
	 EOF 
;

// Rule SpellPattern5
ruleSpellPattern5 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSpellPattern5Access().getSpellInst5ParserRuleCall_0(), currentNode); 
    }
    this_SpellInst5_0=ruleSpellInst5
    { 
        $current = $this_SpellInst5_0.current; 
        currentNode = currentNode.getParent();
    }
((
(
		lv_value1_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSpellPattern5Access().getValue1STRINGTerminalRuleCall_1_0_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellPattern5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSpellPattern5Access().getValue2INTTerminalRuleCall_1_1_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellPattern5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSpellPattern5Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleSpellInst1
entryRuleSpellInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellInst1Rule(), currentNode); }
	 iv_ruleSpellInst1=ruleSpellInst1 
	 { $current=$iv_ruleSpellInst1.current; } 
	 EOF 
;

// Rule SpellInst1
ruleSpellInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_name_0_0=	'#name' 
    {
        createLeafNode(grammarAccess.getSpellInst1Access().getNameNameKeyword_0_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#name", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_descr_1_0=	'#descr' 
    {
        createLeafNode(grammarAccess.getSpellInst1Access().getDescrDescrKeyword_1_0(), "descr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "descr", true, "#descr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleSpellInst2
entryRuleSpellInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellInst2Rule(), currentNode); }
	 iv_ruleSpellInst2=ruleSpellInst2 
	 { $current=$iv_ruleSpellInst2.current; } 
	 EOF 
;

// Rule SpellInst2
ruleSpellInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_school_0_0=	'#school' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getSchoolSchoolKeyword_0_0(), "school"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "school", true, "#school", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_researchlevel_1_0=	'#researchlevel' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getResearchlevelResearchlevelKeyword_1_0(), "researchlevel"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "researchlevel", true, "#researchlevel", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_aoe_2_0=	'#aoe' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getAoeAoeKeyword_2_0(), "aoe"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "aoe", true, "#aoe", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_damage_3_0=	'#damage' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getDamageDamageKeyword_3_0(), "damage"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "damage", true, "#damage", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_effect_4_0=	'#effect' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getEffectEffectKeyword_4_0(), "effect"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "effect", true, "#effect", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_fatiguecost_5_0=	'#fatiguecost' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getFatiguecostFatiguecostKeyword_5_0(), "fatiguecost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fatiguecost", true, "#fatiguecost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_flightspr_6_0=	'#flightspr' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getFlightsprFlightsprKeyword_6_0(), "flightspr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "flightspr", true, "#flightspr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_explspr_7_0=	'#explspr' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getExplsprExplsprKeyword_7_0(), "explspr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "explspr", true, "#explspr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nreff_8_0=	'#nreff' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getNreffNreffKeyword_8_0(), "nreff"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nreff", true, "#nreff", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_range_9_0=	'#range' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getRangeRangeKeyword_9_0(), "range"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "range", true, "#range", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_precision_10_0=	'#precision' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getPrecisionPrecisionKeyword_10_0(), "precision"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "precision", true, "#precision", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sound_11_0=	'#sound' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getSoundSoundKeyword_11_0(), "sound"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sound", true, "#sound", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_spec_12_0=	'#spec' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getSpecSpecKeyword_12_0(), "spec"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "spec", true, "#spec", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_restricted_13_0=	'#restricted' 
    {
        createLeafNode(grammarAccess.getSpellInst2Access().getRestrictedRestrictedKeyword_13_0(), "restricted"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "restricted", true, "#restricted", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleSpellInst3
entryRuleSpellInst3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellInst3Rule(), currentNode); }
	 iv_ruleSpellInst3=ruleSpellInst3 
	 { $current=$iv_ruleSpellInst3.current; } 
	 EOF 
;

// Rule SpellInst3
ruleSpellInst3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_path_0_0=	'#path' 
    {
        createLeafNode(grammarAccess.getSpellInst3Access().getPathPathKeyword_0_0(), "path"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "path", true, "#path", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_pathlevel_1_0=	'#pathlevel' 
    {
        createLeafNode(grammarAccess.getSpellInst3Access().getPathlevelPathlevelKeyword_1_0(), "pathlevel"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "pathlevel", true, "#pathlevel", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleSpellInst4
entryRuleSpellInst4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellInst4Rule(), currentNode); }
	 iv_ruleSpellInst4=ruleSpellInst4 
	 { $current=$iv_ruleSpellInst4.current; } 
	 EOF 
;

// Rule SpellInst4
ruleSpellInst4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_clear_0_0=	'#clear' 
    {
        createLeafNode(grammarAccess.getSpellInst4Access().getClearClearKeyword_0(), "clear"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clear", true, "#clear", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleSpellInst5
entryRuleSpellInst5 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpellInst5Rule(), currentNode); }
	 iv_ruleSpellInst5=ruleSpellInst5 
	 { $current=$iv_ruleSpellInst5.current; } 
	 EOF 
;

// Rule SpellInst5
ruleSpellInst5 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_copyspell_0_0=	'#copyspell' 
    {
        createLeafNode(grammarAccess.getSpellInst5Access().getCopyspellCopyspellKeyword_0_0(), "copyspell"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "copyspell", true, "#copyspell", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nextspell_1_0=	'#nextspell' 
    {
        createLeafNode(grammarAccess.getSpellInst5Access().getNextspellNextspellKeyword_1_0(), "nextspell"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpellInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nextspell", true, "#nextspell", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleItem
entryRuleItem returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemRule(), currentNode); }
	 iv_ruleItem=ruleItem 
	 { $current=$iv_ruleItem.current; } 
	 EOF 
;

// Rule Item
ruleItem returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getItemAccess().getSelectItemByIdParserRuleCall_0(), currentNode); 
    }
    this_SelectItemById_0=ruleSelectItemById
    { 
        $current = $this_SelectItemById_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getItemAccess().getSelectItemByNameParserRuleCall_1(), currentNode); 
    }
    this_SelectItemByName_1=ruleSelectItemByName
    { 
        $current = $this_SelectItemByName_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getItemAccess().getNewItemParserRuleCall_2(), currentNode); 
    }
    this_NewItem_2=ruleNewItem
    { 
        $current = $this_NewItem_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSelectItemById
entryRuleSelectItemById returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectItemByIdRule(), currentNode); }
	 iv_ruleSelectItemById=ruleSelectItemById 
	 { $current=$iv_ruleSelectItemById.current; } 
	 EOF 
;

// Rule SelectItemById
ruleSelectItemById returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectitem' 
    {
        createLeafNode(grammarAccess.getSelectItemByIdAccess().getSelectitemKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectItemByIdAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectItemByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectItemByIdAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectItemByIdAccess().getModsItemModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleItemMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectItemByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"ItemMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectItemByIdAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSelectItemByName
entryRuleSelectItemByName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectItemByNameRule(), currentNode); }
	 iv_ruleSelectItemByName=ruleSelectItemByName 
	 { $current=$iv_ruleSelectItemByName.current; } 
	 EOF 
;

// Rule SelectItemByName
ruleSelectItemByName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectitem' 
    {
        createLeafNode(grammarAccess.getSelectItemByNameAccess().getSelectitemKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSelectItemByNameAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectItemByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectItemByNameAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectItemByNameAccess().getModsItemModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleItemMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectItemByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"ItemMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectItemByNameAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleNewItem
entryRuleNewItem returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNewItemRule(), currentNode); }
	 iv_ruleNewItem=ruleNewItem 
	 { $current=$iv_ruleNewItem.current; } 
	 EOF 
;

// Rule NewItem
ruleNewItem returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#newitem' 
    {
        createLeafNode(grammarAccess.getNewItemAccess().getNewitemKeyword_0(), null); 
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNewItemAccess().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNewItemAccess().getModsItemModsParserRuleCall_2_0(), currentNode); 
	    }
		lv_mods_2_0=ruleItemMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewItemRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_2_0, 
	        		"ItemMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getNewItemAccess().getEndKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleItemMods
entryRuleItemMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemModsRule(), currentNode); }
	 iv_ruleItemMods=ruleItemMods 
	 { $current=$iv_ruleItemMods.current; } 
	 EOF 
;

// Rule ItemMods
ruleItemMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getItemModsAccess().getItemPattern1ParserRuleCall_0(), currentNode); 
    }
    this_ItemPattern1_0=ruleItemPattern1
    { 
        $current = $this_ItemPattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getItemModsAccess().getItemPattern2ParserRuleCall_1(), currentNode); 
    }
    this_ItemPattern2_1=ruleItemPattern2
    { 
        $current = $this_ItemPattern2_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getItemModsAccess().getItemPattern3ParserRuleCall_2(), currentNode); 
    }
    this_ItemPattern3_2=ruleItemPattern3
    { 
        $current = $this_ItemPattern3_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleItemPattern1
entryRuleItemPattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemPattern1Rule(), currentNode); }
	 iv_ruleItemPattern1=ruleItemPattern1 
	 { $current=$iv_ruleItemPattern1.current; } 
	 EOF 
;

// Rule ItemPattern1
ruleItemPattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getItemPattern1Access().getItemInst1ParserRuleCall_0(), currentNode); 
    }
    this_ItemInst1_0=ruleItemInst1
    { 
        $current = $this_ItemInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getItemPattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemPattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getItemPattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleItemPattern2
entryRuleItemPattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemPattern2Rule(), currentNode); }
	 iv_ruleItemPattern2=ruleItemPattern2 
	 { $current=$iv_ruleItemPattern2.current; } 
	 EOF 
;

// Rule ItemPattern2
ruleItemPattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getItemPattern2Access().getItemInst2ParserRuleCall_0(), currentNode); 
    }
    this_ItemInst2_0=ruleItemInst2
    { 
        $current = $this_ItemInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getItemPattern2Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemPattern2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getItemPattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleItemPattern3
entryRuleItemPattern3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemPattern3Rule(), currentNode); }
	 iv_ruleItemPattern3=ruleItemPattern3 
	 { $current=$iv_ruleItemPattern3.current; } 
	 EOF 
;

// Rule ItemPattern3
ruleItemPattern3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getItemPattern3Access().getItemInst3ParserRuleCall_0(), currentNode); 
    }
    this_ItemInst3_0=ruleItemInst3
    { 
        $current = $this_ItemInst3_0.current; 
        currentNode = currentNode.getParent();
    }
((
(
		lv_value1_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getItemPattern3Access().getValue1STRINGTerminalRuleCall_1_0_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getItemPattern3Access().getValue2INTTerminalRuleCall_1_1_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemPattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getItemPattern3Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleItemInst1
entryRuleItemInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemInst1Rule(), currentNode); }
	 iv_ruleItemInst1=ruleItemInst1 
	 { $current=$iv_ruleItemInst1.current; } 
	 EOF 
;

// Rule ItemInst1
ruleItemInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_name_0_0=	'#name' 
    {
        createLeafNode(grammarAccess.getItemInst1Access().getNameNameKeyword_0_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#name", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_descr_1_0=	'#descr' 
    {
        createLeafNode(grammarAccess.getItemInst1Access().getDescrDescrKeyword_1_0(), "descr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "descr", true, "#descr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_armor_2_0=	'#armor' 
    {
        createLeafNode(grammarAccess.getItemInst1Access().getArmorArmorKeyword_2_0(), "armor"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "armor", true, "#armor", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleItemInst2
entryRuleItemInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemInst2Rule(), currentNode); }
	 iv_ruleItemInst2=ruleItemInst2 
	 { $current=$iv_ruleItemInst2.current; } 
	 EOF 
;

// Rule ItemInst2
ruleItemInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_constlevel_0_0=	'#constlevel' 
    {
        createLeafNode(grammarAccess.getItemInst2Access().getConstlevelConstlevelKeyword_0_0(), "constlevel"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "constlevel", true, "#constlevel", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mainpath_1_0=	'#mainpath' 
    {
        createLeafNode(grammarAccess.getItemInst2Access().getMainpathMainpathKeyword_1_0(), "mainpath"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mainpath", true, "#mainpath", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mainlevel_2_0=	'#mainlevel' 
    {
        createLeafNode(grammarAccess.getItemInst2Access().getMainlevelMainlevelKeyword_2_0(), "mainlevel"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mainlevel", true, "#mainlevel", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_secondarypath_3_0=	'#secondarypath' 
    {
        createLeafNode(grammarAccess.getItemInst2Access().getSecondarypathSecondarypathKeyword_3_0(), "secondarypath"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "secondarypath", true, "#secondarypath", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_secondarylevel_4_0=	'#secondarylevel' 
    {
        createLeafNode(grammarAccess.getItemInst2Access().getSecondarylevelSecondarylevelKeyword_4_0(), "secondarylevel"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "secondarylevel", true, "#secondarylevel", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_type_5_0=	'#type' 
    {
        createLeafNode(grammarAccess.getItemInst2Access().getTypeTypeKeyword_5_0(), "type"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "type", true, "#type", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_weapon_6_0=	'#weapon' 
    {
        createLeafNode(grammarAccess.getItemInst2Access().getWeaponWeaponKeyword_6_0(), "weapon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "weapon", true, "#weapon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleItemInst3
entryRuleItemInst3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getItemInst3Rule(), currentNode); }
	 iv_ruleItemInst3=ruleItemInst3 
	 { $current=$iv_ruleItemInst3.current; } 
	 EOF 
;

// Rule ItemInst3
ruleItemInst3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_copyspr_0_0=	'#copyspr' 
    {
        createLeafNode(grammarAccess.getItemInst3Access().getCopysprCopysprKeyword_0(), "copyspr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getItemInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "copyspr", true, "#copyspr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNameRule(), currentNode); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;

// Rule Name
ruleName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getNameAccess().getSelectNameParserRuleCall(), currentNode); 
    }
    this_SelectName_0=ruleSelectName
    { 
        $current = $this_SelectName_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleSelectName
entryRuleSelectName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectNameRule(), currentNode); }
	 iv_ruleSelectName=ruleSelectName 
	 { $current=$iv_ruleSelectName.current; } 
	 EOF 
;

// Rule SelectName
ruleSelectName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectnametype' 
    {
        createLeafNode(grammarAccess.getSelectNameAccess().getSelectnametypeKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectNameAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectNameAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectNameAccess().getModsNameModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleNameMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"NameMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectNameAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleNameMods
entryRuleNameMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNameModsRule(), currentNode); }
	 iv_ruleNameMods=ruleNameMods 
	 { $current=$iv_ruleNameMods.current; } 
	 EOF 
;

// Rule NameMods
ruleNameMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNameModsAccess().getNamePattern1ParserRuleCall_0(), currentNode); 
    }
    this_NamePattern1_0=ruleNamePattern1
    { 
        $current = $this_NamePattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNameModsAccess().getNamePattern2ParserRuleCall_1(), currentNode); 
    }
    this_NamePattern2_1=ruleNamePattern2
    { 
        $current = $this_NamePattern2_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleNamePattern1
entryRuleNamePattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNamePattern1Rule(), currentNode); }
	 iv_ruleNamePattern1=ruleNamePattern1 
	 { $current=$iv_ruleNamePattern1.current; } 
	 EOF 
;

// Rule NamePattern1
ruleNamePattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNamePattern1Access().getNameInst1ParserRuleCall_0(), currentNode); 
    }
    this_NameInst1_0=ruleNameInst1
    { 
        $current = $this_NameInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getNamePattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamePattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNamePattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleNamePattern2
entryRuleNamePattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNamePattern2Rule(), currentNode); }
	 iv_ruleNamePattern2=ruleNamePattern2 
	 { $current=$iv_ruleNamePattern2.current; } 
	 EOF 
;

// Rule NamePattern2
ruleNamePattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNamePattern2Access().getNameInst2ParserRuleCall_0(), currentNode); 
    }
    this_NameInst2_0=ruleNameInst2
    { 
        $current = $this_NameInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNamePattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*)
;





// Entry rule entryRuleNameInst1
entryRuleNameInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNameInst1Rule(), currentNode); }
	 iv_ruleNameInst1=ruleNameInst1 
	 { $current=$iv_ruleNameInst1.current; } 
	 EOF 
;

// Rule NameInst1
ruleNameInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_name_0_0=	'#addname' 
    {
        createLeafNode(grammarAccess.getNameInst1Access().getNameAddnameKeyword_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNameInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#addname", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleNameInst2
entryRuleNameInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNameInst2Rule(), currentNode); }
	 iv_ruleNameInst2=ruleNameInst2 
	 { $current=$iv_ruleNameInst2.current; } 
	 EOF 
;

// Rule NameInst2
ruleNameInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_clear_0_0=	'#clear' 
    {
        createLeafNode(grammarAccess.getNameInst2Access().getClearClearKeyword_0(), "clear"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNameInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clear", true, "#clear", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleSite
entryRuleSite returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSiteRule(), currentNode); }
	 iv_ruleSite=ruleSite 
	 { $current=$iv_ruleSite.current; } 
	 EOF 
;

// Rule Site
ruleSite returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSiteAccess().getSelectSiteByIdParserRuleCall_0(), currentNode); 
    }
    this_SelectSiteById_0=ruleSelectSiteById
    { 
        $current = $this_SelectSiteById_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSiteAccess().getSelectSiteByNameParserRuleCall_1(), currentNode); 
    }
    this_SelectSiteByName_1=ruleSelectSiteByName
    { 
        $current = $this_SelectSiteByName_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSiteAccess().getNewSiteParserRuleCall_2(), currentNode); 
    }
    this_NewSite_2=ruleNewSite
    { 
        $current = $this_NewSite_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSelectSiteById
entryRuleSelectSiteById returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectSiteByIdRule(), currentNode); }
	 iv_ruleSelectSiteById=ruleSelectSiteById 
	 { $current=$iv_ruleSelectSiteById.current; } 
	 EOF 
;

// Rule SelectSiteById
ruleSelectSiteById returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectsite' 
    {
        createLeafNode(grammarAccess.getSelectSiteByIdAccess().getSelectsiteKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectSiteByIdAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSiteByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectSiteByIdAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectSiteByIdAccess().getModsSiteModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleSiteMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSiteByIdRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"SiteMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectSiteByIdAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSelectSiteByName
entryRuleSelectSiteByName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectSiteByNameRule(), currentNode); }
	 iv_ruleSelectSiteByName=ruleSelectSiteByName 
	 { $current=$iv_ruleSelectSiteByName.current; } 
	 EOF 
;

// Rule SelectSiteByName
ruleSelectSiteByName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectsite' 
    {
        createLeafNode(grammarAccess.getSelectSiteByNameAccess().getSelectsiteKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSelectSiteByNameAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSiteByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectSiteByNameAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectSiteByNameAccess().getModsSiteModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleSiteMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectSiteByNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"SiteMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectSiteByNameAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleNewSite
entryRuleNewSite returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNewSiteRule(), currentNode); }
	 iv_ruleNewSite=ruleNewSite 
	 { $current=$iv_ruleNewSite.current; } 
	 EOF 
;

// Rule NewSite
ruleNewSite returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#newsite' 
    {
        createLeafNode(grammarAccess.getNewSiteAccess().getNewsiteKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getNewSiteAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewSiteRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNewSiteAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNewSiteAccess().getModsSiteModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleSiteMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewSiteRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"SiteMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getNewSiteAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleSiteMods
entryRuleSiteMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSiteModsRule(), currentNode); }
	 iv_ruleSiteMods=ruleSiteMods 
	 { $current=$iv_ruleSiteMods.current; } 
	 EOF 
;

// Rule SiteMods
ruleSiteMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSiteModsAccess().getSitePattern1ParserRuleCall_0(), currentNode); 
    }
    this_SitePattern1_0=ruleSitePattern1
    { 
        $current = $this_SitePattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSiteModsAccess().getSitePattern2ParserRuleCall_1(), currentNode); 
    }
    this_SitePattern2_1=ruleSitePattern2
    { 
        $current = $this_SitePattern2_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSiteModsAccess().getSitePattern3ParserRuleCall_2(), currentNode); 
    }
    this_SitePattern3_2=ruleSitePattern3
    { 
        $current = $this_SitePattern3_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSiteModsAccess().getSitePattern4ParserRuleCall_3(), currentNode); 
    }
    this_SitePattern4_3=ruleSitePattern4
    { 
        $current = $this_SitePattern4_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSitePattern1
entryRuleSitePattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSitePattern1Rule(), currentNode); }
	 iv_ruleSitePattern1=ruleSitePattern1 
	 { $current=$iv_ruleSitePattern1.current; } 
	 EOF 
;

// Rule SitePattern1
ruleSitePattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSitePattern1Access().getSiteInst1ParserRuleCall_0(), currentNode); 
    }
    this_SiteInst1_0=ruleSiteInst1
    { 
        $current = $this_SiteInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSitePattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSitePattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSitePattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleSitePattern2
entryRuleSitePattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSitePattern2Rule(), currentNode); }
	 iv_ruleSitePattern2=ruleSitePattern2 
	 { $current=$iv_ruleSitePattern2.current; } 
	 EOF 
;

// Rule SitePattern2
ruleSitePattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSitePattern2Access().getSiteInst2ParserRuleCall_0(), currentNode); 
    }
    this_SiteInst2_0=ruleSiteInst2
    { 
        $current = $this_SiteInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSitePattern2Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSitePattern2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSitePattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleSitePattern3
entryRuleSitePattern3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSitePattern3Rule(), currentNode); }
	 iv_ruleSitePattern3=ruleSitePattern3 
	 { $current=$iv_ruleSitePattern3.current; } 
	 EOF 
;

// Rule SitePattern3
ruleSitePattern3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSitePattern3Access().getSiteInst3ParserRuleCall_0(), currentNode); 
    }
    this_SiteInst3_0=ruleSiteInst3
    { 
        $current = $this_SiteInst3_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value1_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSitePattern3Access().getValue1INTTerminalRuleCall_1_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSitePattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSitePattern3Access().getValue2INTTerminalRuleCall_2_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSitePattern3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSitePattern3Access().getFREE_FORM_COMMENTTerminalRuleCall_3(), null); 
    }
)*)
;





// Entry rule entryRuleSitePattern4
entryRuleSitePattern4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSitePattern4Rule(), currentNode); }
	 iv_ruleSitePattern4=ruleSitePattern4 
	 { $current=$iv_ruleSitePattern4.current; } 
	 EOF 
;

// Rule SitePattern4
ruleSitePattern4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSitePattern4Access().getSiteInst4ParserRuleCall_0(), currentNode); 
    }
    this_SiteInst4_0=ruleSiteInst4
    { 
        $current = $this_SiteInst4_0.current; 
        currentNode = currentNode.getParent();
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSitePattern4Access().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*)
;





// Entry rule entryRuleSiteInst1
entryRuleSiteInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSiteInst1Rule(), currentNode); }
	 iv_ruleSiteInst1=ruleSiteInst1 
	 { $current=$iv_ruleSiteInst1.current; } 
	 EOF 
;

// Rule SiteInst1
ruleSiteInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_name_0_0=	'#name' 
    {
        createLeafNode(grammarAccess.getSiteInst1Access().getNameNameKeyword_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#name", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleSiteInst2
entryRuleSiteInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSiteInst2Rule(), currentNode); }
	 iv_ruleSiteInst2=ruleSiteInst2 
	 { $current=$iv_ruleSiteInst2.current; } 
	 EOF 
;

// Rule SiteInst2
ruleSiteInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_path_0_0=	'#path' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getPathPathKeyword_0_0(), "path"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "path", true, "#path", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_level_1_0=	'#level' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getLevelLevelKeyword_1_0(), "level"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "level", true, "#level", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_rarity_2_0=	'#rarity' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getRarityRarityKeyword_2_0(), "rarity"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "rarity", true, "#rarity", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_loc_3_0=	'#loc' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getLocLocKeyword_3_0(), "loc"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "loc", true, "#loc", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_homemon_4_0=	'#homemon' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getHomemonHomemonKeyword_4_0(), "homemon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "homemon", true, "#homemon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_homecom_5_0=	'#homecom' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getHomecomHomecomKeyword_5_0(), "homecom"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "homecom", true, "#homecom", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mon_6_0=	'#mon' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getMonMonKeyword_6_0(), "mon"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mon", true, "#mon", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_com_7_0=	'#com' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getComComKeyword_7_0(), "com"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "com", true, "#com", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_gold_8_0=	'#gold' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getGoldGoldKeyword_8_0(), "gold"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "gold", true, "#gold", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_res_9_0=	'#res' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getResResKeyword_9_0(), "res"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "res", true, "#res", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_incscale_10_0=	'#incscale' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getIncscaleIncscaleKeyword_10_0(), "incscale"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "incscale", true, "#incscale", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_decscale_11_0=	'#decscale' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getDecscaleDecscaleKeyword_11_0(), "decscale"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "decscale", true, "#decscale", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_heal_12_0=	'#heal' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getHealHealKeyword_12_0(), "heal"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "heal", true, "#heal", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_curse_13_0=	'#curse' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getCurseCurseKeyword_13_0(), "curse"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "curse", true, "#curse", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_disease_14_0=	'#disease' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getDiseaseDiseaseKeyword_14_0(), "disease"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "disease", true, "#disease", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_horrormark_15_0=	'#horrormark' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getHorrormarkHorrormarkKeyword_15_0(), "horrormark"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "horrormark", true, "#horrormark", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_holyfire_16_0=	'#holyfire' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getHolyfireHolyfireKeyword_16_0(), "holyfire"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "holyfire", true, "#holyfire", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_holypower_17_0=	'#holypower' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getHolypowerHolypowerKeyword_17_0(), "holypower"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "holypower", true, "#holypower", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_conjcost_18_0=	'#conjcost' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getConjcostConjcostKeyword_18_0(), "conjcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "conjcost", true, "#conjcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_altcost_19_0=	'#altcost' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getAltcostAltcostKeyword_19_0(), "altcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "altcost", true, "#altcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_evocost_20_0=	'#evocost' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getEvocostEvocostKeyword_20_0(), "evocost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "evocost", true, "#evocost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_constcost_21_0=	'#constcost' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getConstcostConstcostKeyword_21_0(), "constcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "constcost", true, "#constcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_enchcost_22_0=	'#enchcost' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getEnchcostEnchcostKeyword_22_0(), "enchcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "enchcost", true, "#enchcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_thaucost_23_0=	'#thaucost' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getThaucostThaucostKeyword_23_0(), "thaucost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "thaucost", true, "#thaucost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_bloodcost_24_0=	'#bloodcost' 
    {
        createLeafNode(grammarAccess.getSiteInst2Access().getBloodcostBloodcostKeyword_24_0(), "bloodcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "bloodcost", true, "#bloodcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleSiteInst3
entryRuleSiteInst3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSiteInst3Rule(), currentNode); }
	 iv_ruleSiteInst3=ruleSiteInst3 
	 { $current=$iv_ruleSiteInst3.current; } 
	 EOF 
;

// Rule SiteInst3
ruleSiteInst3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_gems_0_0=	'#gems' 
    {
        createLeafNode(grammarAccess.getSiteInst3Access().getGemsGemsKeyword_0(), "gems"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "gems", true, "#gems", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleSiteInst4
entryRuleSiteInst4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSiteInst4Rule(), currentNode); }
	 iv_ruleSiteInst4=ruleSiteInst4 
	 { $current=$iv_ruleSiteInst4.current; } 
	 EOF 
;

// Rule SiteInst4
ruleSiteInst4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_clear_0_0=	'#clear' 
    {
        createLeafNode(grammarAccess.getSiteInst4Access().getClearClearKeyword_0_0(), "clear"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clear", true, "#clear", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_lab_1_0=	'#lab' 
    {
        createLeafNode(grammarAccess.getSiteInst4Access().getLabLabKeyword_1_0(), "lab"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSiteInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "lab", true, "#lab", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleNation
entryRuleNation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationRule(), currentNode); }
	 iv_ruleNation=ruleNation 
	 { $current=$iv_ruleNation.current; } 
	 EOF 
;

// Rule Nation
ruleNation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNationAccess().getSelectNationParserRuleCall_0(), currentNode); 
    }
    this_SelectNation_0=ruleSelectNation
    { 
        $current = $this_SelectNation_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNationAccess().getIndepFlagParserRuleCall_1(), currentNode); 
    }
    this_IndepFlag_1=ruleIndepFlag
    { 
        $current = $this_IndepFlag_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSelectNation
entryRuleSelectNation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSelectNationRule(), currentNode); }
	 iv_ruleSelectNation=ruleSelectNation 
	 { $current=$iv_ruleSelectNation.current; } 
	 EOF 
;

// Rule SelectNation
ruleSelectNation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#selectnation' 
    {
        createLeafNode(grammarAccess.getSelectNationAccess().getSelectnationKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getSelectNationAccess().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectNationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getSelectNationAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSelectNationAccess().getModsNationModsParserRuleCall_3_0(), currentNode); 
	    }
		lv_mods_3_0=ruleNationMods		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSelectNationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mods",
	        		lv_mods_3_0, 
	        		"NationMods", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'#end' 
    {
        createLeafNode(grammarAccess.getSelectNationAccess().getEndKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleIndepFlag
entryRuleIndepFlag returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getIndepFlagRule(), currentNode); }
	 iv_ruleIndepFlag=ruleIndepFlag 
	 { $current=$iv_ruleIndepFlag.current; } 
	 EOF 
;

// Rule IndepFlag
ruleIndepFlag returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'#indepflag' 
    {
        createLeafNode(grammarAccess.getIndepFlagAccess().getIndepflagKeyword_0(), null); 
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getIndepFlagAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIndepFlagRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getIndepFlagAccess().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleNationMods
entryRuleNationMods returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationModsRule(), currentNode); }
	 iv_ruleNationMods=ruleNationMods 
	 { $current=$iv_ruleNationMods.current; } 
	 EOF 
;

// Rule NationMods
ruleNationMods returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNationModsAccess().getNationPattern1ParserRuleCall_0(), currentNode); 
    }
    this_NationPattern1_0=ruleNationPattern1
    { 
        $current = $this_NationPattern1_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNationModsAccess().getNationPattern2ParserRuleCall_1(), currentNode); 
    }
    this_NationPattern2_1=ruleNationPattern2
    { 
        $current = $this_NationPattern2_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNationModsAccess().getNationPattern3ParserRuleCall_2(), currentNode); 
    }
    this_NationPattern3_2=ruleNationPattern3
    { 
        $current = $this_NationPattern3_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNationModsAccess().getNationPattern4ParserRuleCall_3(), currentNode); 
    }
    this_NationPattern4_3=ruleNationPattern4
    { 
        $current = $this_NationPattern4_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getNationModsAccess().getNationPattern5ParserRuleCall_4(), currentNode); 
    }
    this_NationPattern5_4=ruleNationPattern5
    { 
        $current = $this_NationPattern5_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleNationPattern1
entryRuleNationPattern1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationPattern1Rule(), currentNode); }
	 iv_ruleNationPattern1=ruleNationPattern1 
	 { $current=$iv_ruleNationPattern1.current; } 
	 EOF 
;

// Rule NationPattern1
ruleNationPattern1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNationPattern1Access().getNationInst1ParserRuleCall_0(), currentNode); 
    }
    this_NationInst1_0=ruleNationInst1
    { 
        $current = $this_NationInst1_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getNationPattern1Access().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationPattern1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNationPattern1Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleNationPattern2
entryRuleNationPattern2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationPattern2Rule(), currentNode); }
	 iv_ruleNationPattern2=ruleNationPattern2 
	 { $current=$iv_ruleNationPattern2.current; } 
	 EOF 
;

// Rule NationPattern2
ruleNationPattern2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNationPattern2Access().getNationInst2ParserRuleCall_0(), currentNode); 
    }
    this_NationInst2_0=ruleNationInst2
    { 
        $current = $this_NationInst2_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		lv_value_1_0=RULE_INT
		{
			createLeafNode(grammarAccess.getNationPattern2Access().getValueINTTerminalRuleCall_1_0(), "value"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationPattern2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_1_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNationPattern2Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleNationPattern3
entryRuleNationPattern3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationPattern3Rule(), currentNode); }
	 iv_ruleNationPattern3=ruleNationPattern3 
	 { $current=$iv_ruleNationPattern3.current; } 
	 EOF 
;

// Rule NationPattern3
ruleNationPattern3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNationPattern3Access().getNationInst3ParserRuleCall_0(), currentNode); 
    }
    this_NationInst3_0=ruleNationInst3
    { 
        $current = $this_NationInst3_0.current; 
        currentNode = currentNode.getParent();
    }
(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNationPattern3Access().getFREE_FORM_COMMENTTerminalRuleCall_1(), null); 
    }
)*)
;





// Entry rule entryRuleNationPattern4
entryRuleNationPattern4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationPattern4Rule(), currentNode); }
	 iv_ruleNationPattern4=ruleNationPattern4 
	 { $current=$iv_ruleNationPattern4.current; } 
	 EOF 
;

// Rule NationPattern4
ruleNationPattern4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNationPattern4Access().getNationInst4ParserRuleCall_0(), currentNode); 
    }
    this_NationInst4_0=ruleNationInst4
    { 
        $current = $this_NationInst4_0.current; 
        currentNode = currentNode.getParent();
    }
((
(
		lv_value1_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getNationPattern4Access().getValue1STRINGTerminalRuleCall_1_0_0(), "value1"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationPattern4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_value2_2_0=RULE_INT
		{
			createLeafNode(grammarAccess.getNationPattern4Access().getValue2INTTerminalRuleCall_1_1_0(), "value2"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationPattern4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNationPattern4Access().getFREE_FORM_COMMENTTerminalRuleCall_2(), null); 
    }
)*)
;





// Entry rule entryRuleNationPattern5
entryRuleNationPattern5 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationPattern5Rule(), currentNode); }
	 iv_ruleNationPattern5=ruleNationPattern5 
	 { $current=$iv_ruleNationPattern5.current; } 
	 EOF 
;

// Rule NationPattern5
ruleNationPattern5 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNationPattern5Access().getNationInst5ParserRuleCall_0(), currentNode); 
    }
    this_NationInst5_0=ruleNationInst5
    { 
        $current = $this_NationInst5_0.current; 
        currentNode = currentNode.getParent();
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNationPattern5Access().getValue1DecimalValueParserRuleCall_1_0(), currentNode); 
	    }
		lv_value1_1_0=ruleDecimalValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationPattern5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value1",
	        		lv_value1_1_0, 
	        		"DecimalValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNationPattern5Access().getValue2DecimalValueParserRuleCall_2_0(), currentNode); 
	    }
		lv_value2_2_0=ruleDecimalValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationPattern5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value2",
	        		lv_value2_2_0, 
	        		"DecimalValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNationPattern5Access().getValue3DecimalValueParserRuleCall_3_0(), currentNode); 
	    }
		lv_value3_3_0=ruleDecimalValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationPattern5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value3",
	        		lv_value3_3_0, 
	        		"DecimalValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(RULE_FREE_FORM_COMMENT
    { 
    createLeafNode(grammarAccess.getNationPattern5Access().getFREE_FORM_COMMENTTerminalRuleCall_4(), null); 
    }
)*)
;





// Entry rule entryRuleNationInst1
entryRuleNationInst1 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationInst1Rule(), currentNode); }
	 iv_ruleNationInst1=ruleNationInst1 
	 { $current=$iv_ruleNationInst1.current; } 
	 EOF 
;

// Rule NationInst1
ruleNationInst1 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_name_0_0=	'#name' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getNameNameKeyword_0_0(), "name"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", true, "#name", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_epithet_1_0=	'#epithet' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getEpithetEpithetKeyword_1_0(), "epithet"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "epithet", true, "#epithet", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_descr_2_0=	'#descr' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getDescrDescrKeyword_2_0(), "descr"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "descr", true, "#descr", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_summary_3_0=	'#summary' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getSummarySummaryKeyword_3_0(), "summary"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "summary", true, "#summary", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_brief_4_0=	'#brief' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getBriefBriefKeyword_4_0(), "brief"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "brief", true, "#brief", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_flag_5_0=	'#flag' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getFlagFlagKeyword_5_0(), "flag"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "flag", true, "#flag", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mapbackground_6_0=	'#mapbackground' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getMapbackgroundMapbackgroundKeyword_6_0(), "mapbackground"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mapbackground", true, "#mapbackground", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startsite_7_0=	'#startsite' 
    {
        createLeafNode(grammarAccess.getNationInst1Access().getStartsiteStartsiteKeyword_7_0(), "startsite"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst1Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startsite", true, "#startsite", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleNationInst2
entryRuleNationInst2 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationInst2Rule(), currentNode); }
	 iv_ruleNationInst2=ruleNationInst2 
	 { $current=$iv_ruleNationInst2.current; } 
	 EOF 
;

// Rule NationInst2
ruleNationInst2 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_era_0_0=	'#era' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getEraEraKeyword_0_0(), "era"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "era", true, "#era", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_labcost_1_0=	'#labcost' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getLabcostLabcostKeyword_1_0(), "labcost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "labcost", true, "#labcost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_templecost_2_0=	'#templecost' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getTemplecostTemplecostKeyword_2_0(), "templecost"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "templecost", true, "#templecost", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_templepic_3_0=	'#templepic' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getTemplepicTemplepicKeyword_3_0(), "templepic"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "templepic", true, "#templepic", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startunitnbrs1_4_0=	'#startunitnbrs1' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getStartunitnbrs1Startunitnbrs1Keyword_4_0(), "startunitnbrs1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startunitnbrs1", true, "#startunitnbrs1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startunitnbrs2_5_0=	'#startunitnbrs2' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getStartunitnbrs2Startunitnbrs2Keyword_5_0(), "startunitnbrs2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startunitnbrs2", true, "#startunitnbrs2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_hero1_6_0=	'#hero1' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getHero1Hero1Keyword_6_0(), "hero1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "hero1", true, "#hero1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_hero2_7_0=	'#hero2' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getHero2Hero2Keyword_7_0(), "hero2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "hero2", true, "#hero2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_hero3_8_0=	'#hero3' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getHero3Hero3Keyword_8_0(), "hero3"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "hero3", true, "#hero3", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_hero4_9_0=	'#hero4' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getHero4Hero4Keyword_9_0(), "hero4"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "hero4", true, "#hero4", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_hero5_10_0=	'#hero5' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getHero5Hero5Keyword_10_0(), "hero5"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "hero5", true, "#hero5", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_hero6_11_0=	'#hero6' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getHero6Hero6Keyword_11_0(), "hero6"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "hero6", true, "#hero6", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_multihero1_12_0=	'#multihero1' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getMultihero1Multihero1Keyword_12_0(), "multihero1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "multihero1", true, "#multihero1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_multihero2_13_0=	'#multihero2' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getMultihero2Multihero2Keyword_13_0(), "multihero2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "multihero2", true, "#multihero2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defmult1_14_0=	'#defmult1' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDefmult1Defmult1Keyword_14_0(), "defmult1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defmult1", true, "#defmult1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defmult1b_15_0=	'#defmult1b' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDefmult1bDefmult1bKeyword_15_0(), "defmult1b"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defmult1b", true, "#defmult1b", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defmult2_16_0=	'#defmult2' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDefmult2Defmult2Keyword_16_0(), "defmult2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defmult2", true, "#defmult2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defmult2b_17_0=	'#defmult2b' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDefmult2bDefmult2bKeyword_17_0(), "defmult2b"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defmult2b", true, "#defmult2b", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_idealcold_18_0=	'#idealcold' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getIdealcoldIdealcoldKeyword_18_0(), "idealcold"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "idealcold", true, "#idealcold", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_castleprod_19_0=	'#castleprod' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getCastleprodCastleprodKeyword_19_0(), "castleprod"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "castleprod", true, "#castleprod", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_domkill_20_0=	'#domkill' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDomkillDomkillKeyword_20_0(), "domkill"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "domkill", true, "#domkill", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_domunrest_21_0=	'#domunrest' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDomunrestDomunrestKeyword_21_0(), "domunrest"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "domunrest", true, "#domunrest", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startfort_22_0=	'#startfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getStartfortStartfortKeyword_22_0(), "startfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startfort", true, "#startfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defaultfort_23_0=	'#defaultfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDefaultfortDefaultfortKeyword_23_0(), "defaultfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defaultfort", true, "#defaultfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_farmfort_24_0=	'#farmfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getFarmfortFarmfortKeyword_24_0(), "farmfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "farmfort", true, "#farmfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_mountainfort_25_0=	'#mountainfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getMountainfortMountainfortKeyword_25_0(), "mountainfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "mountainfort", true, "#mountainfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_forestfort_26_0=	'#forestfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getForestfortForestfortKeyword_26_0(), "forestfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "forestfort", true, "#forestfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_swampfort_27_0=	'#swampfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getSwampfortSwampfortKeyword_27_0(), "swampfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "swampfort", true, "#swampfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwfort_28_0=	'#uwfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getUwfortUwfortKeyword_28_0(), "uwfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwfort", true, "#uwfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_deepfort_29_0=	'#deepfort' 
    {
        createLeafNode(grammarAccess.getNationInst2Access().getDeepfortDeepfortKeyword_29_0(), "deepfort"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst2Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "deepfort", true, "#deepfort", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleNationInst3
entryRuleNationInst3 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationInst3Rule(), currentNode); }
	 iv_ruleNationInst3=ruleNationInst3 
	 { $current=$iv_ruleNationInst3.current; } 
	 EOF 
;

// Rule NationInst3
ruleNationInst3 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_clearnation_0_0=	'#clearnation' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getClearnationClearnationKeyword_0_0(), "clearnation"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clearnation", true, "#clearnation", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_clearrec_1_0=	'#clearrec' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getClearrecClearrecKeyword_1_0(), "clearrec"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clearrec", true, "#clearrec", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_clearsites_2_0=	'#clearsites' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getClearsitesClearsitesKeyword_2_0(), "clearsites"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "clearsites", true, "#clearsites", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwnation_3_0=	'#uwnation' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getUwnationUwnationKeyword_3_0(), "uwnation"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwnation", true, "#uwnation", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_bloodnation_4_0=	'#bloodnation' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getBloodnationBloodnationKeyword_4_0(), "bloodnation"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "bloodnation", true, "#bloodnation", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nopreach_5_0=	'#nopreach' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getNopreachNopreachKeyword_5_0(), "nopreach"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nopreach", true, "#nopreach", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_dyingdom_6_0=	'#dyingdom' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getDyingdomDyingdomKeyword_6_0(), "dyingdom"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "dyingdom", true, "#dyingdom", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sacrificedom_7_0=	'#sacrificedom' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getSacrificedomSacrificedomKeyword_7_0(), "sacrificedom"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sacrificedom", true, "#sacrificedom", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_nodeathsupply_8_0=	'#nodeathsupply' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getNodeathsupplyNodeathsupplyKeyword_8_0(), "nodeathsupply"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nodeathsupply", true, "#nodeathsupply", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_autoundead_9_0=	'#autoundead' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getAutoundeadAutoundeadKeyword_9_0(), "autoundead"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "autoundead", true, "#autoundead", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_zombiereanim_10_0=	'#zombiereanim' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getZombiereanimZombiereanimKeyword_10_0(), "zombiereanim"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "zombiereanim", true, "#zombiereanim", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_horsereanim_11_0=	'#horsereanim' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getHorsereanimHorsereanimKeyword_11_0(), "horsereanim"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "horsereanim", true, "#horsereanim", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_wightreanim_12_0=	'#wightreanim' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getWightreanimWightreanimKeyword_12_0(), "wightreanim"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "wightreanim", true, "#wightreanim", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_manikinreanim_13_0=	'#manikinreanim' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getManikinreanimManikinreanimKeyword_13_0(), "manikinreanim"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "manikinreanim", true, "#manikinreanim", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_tombwyrmreanim_14_0=	'#tombwyrmreanim' 
    {
        createLeafNode(grammarAccess.getNationInst3Access().getTombwyrmreanimTombwyrmreanimKeyword_14_0(), "tombwyrmreanim"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst3Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "tombwyrmreanim", true, "#tombwyrmreanim", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleNationInst4
entryRuleNationInst4 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationInst4Rule(), currentNode); }
	 iv_ruleNationInst4=ruleNationInst4 
	 { $current=$iv_ruleNationInst4.current; } 
	 EOF 
;

// Rule NationInst4
ruleNationInst4 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_startcom_0_0=	'#startcom' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getStartcomStartcomKeyword_0_0(), "startcom"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startcom", true, "#startcom", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startscout_1_0=	'#startscout' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getStartscoutStartscoutKeyword_1_0(), "startscout"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startscout", true, "#startscout", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startunittype1_2_0=	'#startunittype1' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getStartunittype1Startunittype1Keyword_2_0(), "startunittype1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startunittype1", true, "#startunittype1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_startunittype2_3_0=	'#startunittype2' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getStartunittype2Startunittype2Keyword_3_0(), "startunittype2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "startunittype2", true, "#startunittype2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_addrecunit_4_0=	'#addrecunit' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getAddrecunitAddrecunitKeyword_4_0(), "addrecunit"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "addrecunit", true, "#addrecunit", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_addreccom_5_0=	'#addreccom' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getAddreccomAddreccomKeyword_5_0(), "addreccom"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "addreccom", true, "#addreccom", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwunit1_6_0=	'#uwunit1' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwunit1Uwunit1Keyword_6_0(), "uwunit1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwunit1", true, "#uwunit1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwunit2_7_0=	'#uwunit2' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwunit2Uwunit2Keyword_7_0(), "uwunit2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwunit2", true, "#uwunit2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwunit3_8_0=	'#uwunit3' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwunit3Uwunit3Keyword_8_0(), "uwunit3"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwunit3", true, "#uwunit3", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwunit4_9_0=	'#uwunit4' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwunit4Uwunit4Keyword_9_0(), "uwunit4"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwunit4", true, "#uwunit4", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwunit5_10_0=	'#uwunit5' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwunit5Uwunit5Keyword_10_0(), "uwunit5"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwunit5", true, "#uwunit5", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwcom1_11_0=	'#uwcom1' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwcom1Uwcom1Keyword_11_0(), "uwcom1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwcom1", true, "#uwcom1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwcom2_12_0=	'#uwcom2' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwcom2Uwcom2Keyword_12_0(), "uwcom2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwcom2", true, "#uwcom2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwcom3_13_0=	'#uwcom3' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwcom3Uwcom3Keyword_13_0(), "uwcom3"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwcom3", true, "#uwcom3", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwcom4_14_0=	'#uwcom4' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwcom4Uwcom4Keyword_14_0(), "uwcom4"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwcom4", true, "#uwcom4", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_uwcom5_15_0=	'#uwcom5' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getUwcom5Uwcom5Keyword_15_0(), "uwcom5"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uwcom5", true, "#uwcom5", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defcom1_16_0=	'#defcom1' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getDefcom1Defcom1Keyword_16_0(), "defcom1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defcom1", true, "#defcom1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defcom2_17_0=	'#defcom2' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getDefcom2Defcom2Keyword_17_0(), "defcom2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defcom2", true, "#defcom2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defunit1_18_0=	'#defunit1' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getDefunit1Defunit1Keyword_18_0(), "defunit1"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defunit1", true, "#defunit1", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defunit1b_19_0=	'#defunit1b' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getDefunit1bDefunit1bKeyword_19_0(), "defunit1b"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defunit1b", true, "#defunit1b", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defunit2_20_0=	'#defunit2' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getDefunit2Defunit2Keyword_20_0(), "defunit2"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defunit2", true, "#defunit2", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_defunit2b_21_0=	'#defunit2b' 
    {
        createLeafNode(grammarAccess.getNationInst4Access().getDefunit2bDefunit2bKeyword_21_0(), "defunit2b"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst4Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "defunit2b", true, "#defunit2b", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleNationInst5
entryRuleNationInst5 returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNationInst5Rule(), currentNode); }
	 iv_ruleNationInst5=ruleNationInst5 
	 { $current=$iv_ruleNationInst5.current; } 
	 EOF 
;

// Rule NationInst5
ruleNationInst5 returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_color_0_0=	'#color' 
    {
        createLeafNode(grammarAccess.getNationInst5Access().getColorColorKeyword_0(), "color"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNationInst5Rule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "color", true, "#color", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleDecimalValue
entryRuleDecimalValue returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDecimalValueRule(), currentNode); } 
	 iv_ruleDecimalValue=ruleDecimalValue 
	 { $current=$iv_ruleDecimalValue.current.getText(); }  
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    createLeafNode(grammarAccess.getDecimalValueAccess().getINTTerminalRuleCall_0(), null); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getDecimalValueAccess().getFullStopKeyword_1_0(), null); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    createLeafNode(grammarAccess.getDecimalValueAccess().getINTTerminalRuleCall_1_1(), null); 
    }
)*)
    ;





RULE_INT : '-'? ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_FREE_FORM_COMMENT : ('a'..'z'|'A'..'Z'|'0'..'9'|'('|')'|'['|']'|',')+;

RULE_ML_COMMENT : (RULE_SL_COMMENT|(' '* '\t'* ('\r'|'\n'))+) ~(('#'|'\r'|'\n')) ~(('\r'|'\n'))*;

RULE_SL_COMMENT : ('-' ~('0'..'9') ~(('\n'|'\r'))* ('\r'|'\n')?|'//' ~(('\n'|'\r'))* ('\r'|'\n')?);

RULE_WS : (' '|'\t'|'\r'|'\n')+;


